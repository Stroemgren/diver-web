{"version":3,"sources":["theme.tsx","http.ts","store/spots/actions.ts","store/spots/types.ts","store/spots/thunks.ts","store/spots/selectors.ts","mapStyle.ts","components/Map/GoogleMap.tsx","components/Map/Marker.tsx","store/map/selectors.ts","store/map/actions.ts","store/map/types.ts","store/router/selectors.ts","components/Navigation.tsx","components/Layout.tsx","store/center/selectors.ts","store/center/actions.ts","store/center/types.ts","store/center/thunks.ts","components/Map/Popup.tsx","components/Map/SpotPopup.tsx","components/Map/CenterPopup.tsx","containers/Map.tsx","components/Layout/BackdropLayout.tsx","components/Typography/Header.tsx","components/Typography/Place.tsx","components/Spot/HeaderSection.tsx","components/Layout/MaxWidth.tsx","components/Typography/Subtitle.tsx","components/Section.tsx","components/Typography/Body.tsx","containers/Center.tsx","store/weather/actions.ts","store/weather/types.ts","store/weather/selectors.ts","components/WeatherDay.tsx","components/Weather.tsx","store/weather/thunks.ts","components/Spot/Attributes.tsx","components/Spot/Description.tsx","components/Spot/Photos.tsx","components/AvatarMap.tsx","components/SpotCard.tsx","components/Spot.tsx","containers/Spot.tsx","containers/Explore.tsx","store/center/reducer.ts","store/spots/reducer.ts","store/weather/reducer.ts","store/map/reducer.ts","store/index.ts","configureStore.ts","App.tsx","serviceWorker.ts","index.tsx","photos/image1.jpg","photos/image2.jpg","photos/image3.jpg","photos/image4.jpg","photos/image5.jpg"],"names":["theme","responsiveFontSizes","createMuiTheme","palette","primary","main","secondary","text","typography","fontFamily","join","h1","fontWeight","h2","h3","h4","h5","h6","http","config","Http","axios","create","responseType","interceptors","request","use","error","Promise","reject","response","loadLocations","locations","type","fetchLocations","dispatch","getState","method","url","then","data","catch","selectedSpot","state","parts","router","location","pathname","split","filter","p","id","spots","byId","allLocations","Object","values","mapStyle","defaultProps","zoom","GoogleMap","props","center","children","bootstrapURLKeys","key","lat","latitude","lng","longitude","defaultZoom","options","styles","disableDefaultUI","Color","require","color","Marker","classes","useStyles","onClick","active","markerClass","clsx","container","clickable","className","makeStyles","position","transform","width","height","borderRadius","display","alignItems","justifyContent","backgroundColor","fade","rgb","string","cursor","getCenter","map","getZoom","setCenter","coordinate","setZoom","urlSegments","NavigationItem","icon","item","itemActive","Navigation","useDispatch","urlParts","useSelector","shallowEqual","Paper","elevation","push","flexDirection","zIndex","breakpoints","up","boxSizing","fontSize","borderBottom","borderLeft","margin","marginLeft","Layout","activeIndex","style","flexGrow","selectedCenter","centers","allCenters","loadCenters","fetchCenters","Popup","textAlign","padding","marginTop","SpotPopup","onViewClick","Typography","variant","locationType","gutterBottom","name","Button","size","CenterPopup","Map","selectedLocation","mapCenter","mapZoom","useState","activeLocation","setActiveLocation","useEffect","l","c","isSpot","isCenter","t","substr","maxHeight","backdrop","top","overflow","mapFix","contentContainer","overflowY","content","BackdropLayout","backdropHeight","onBackdropVisible","onBackdropHidden","scrollEl","useRef","scrollingEl","handleScroll","current","getBoundingClientRect","addEventListener","debounce","removeEventListener","ref","Header","rest","component","Place","paragraph","marginBottom","marginRight","HeaderSection","title","place","MaxWidth","maxWidth","Subtitle","Section","spacing","paddingBottom","grey","Body","Center","setShowSticky","thisCenter","console","log","address","country","address1","zipcode","city","mapHeight","loadWeatherForecast","weatherForecast","weatherForCoordinate","weatherForecasts","byCoordinate","Segment","justify","left","right","align","segment","WeatherDay","root","attributeIcon","path","mdiWeatherWindy","attribute","wind","attributePostfix","iconMap","fill","minTemp","tempGraphContainer","tempGraphBaseline","tempMinLine","tempToWidth","tempMaxLine","maxTemp","borderBottomLeftRadius","borderTopLeftRadius","borderBottomRightRadius","borderTopRightRadius","mdiWeatherSunny","mdiWeatherPartlyCloudy","mdiWeatherCloudy","mdiWeatherRainy","mdiWeatherPouring","temp","Weather","this","fetchWeatherForecast","prevProps","React","Component","connect","ownProps","Attribute","Attributes","entryIcon","entryType","mdiIsland","mdiFerry","toLowerCase","mdiSpaOutline","mdiSwapVertical","minDepth","maxDepth","Description","open","setOpen","textContainer","textContainerClosed","button","textTransform","Photos","GridList","cellHeight","cols","images","img","i","GridListTile","alt","src","AvatarMap","SpotCard","spot","lineHeight","Spot","nearBySpots","description","image1","image2","image3","image4","image5","overflowX","s","showSticky","nearByCenters","Explore","centersReducer","action","reduce","acc","cur","locationsReducer","weatherForecastsReducer","defaultState","mapReducer","rootReducer","history","combineReducers","connectRouter","createBrowserHistory","store","preloadedState","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","routerMiddleware","thunk","configureStore","App","CssBaseline","render","to","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.adc056cb.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\n\nexport const theme = responsiveFontSizes(createMuiTheme({\n    palette: {\n        primary: {\n            main: '#0C7ED9'\n        },\n        secondary: {\n            main: '#FF8C20'\n        },\n        text: {\n            primary: '#484848'\n        }\n    },\n    typography: {\n        fontFamily: [\n            'Montserrat',\n            'sans-serif'\n        ].join(','),\n        h1: {\n            fontWeight: 500\n        },\n        h2: {\n            fontWeight: 500\n        },\n        h3: {\n            fontWeight: 500\n        },\n        h4: {\n            fontWeight: 500\n        },\n        h5: {\n            fontWeight: 500\n        },\n        h6: {\n            fontWeight: 500\n        },\n    }\n}))","import axios, { AxiosRequestConfig, AxiosResponse, AxiosError, AxiosInstance, AxiosPromise } from 'axios'\nimport { Action } from 'redux'\nimport { ThunkAction } from 'redux-thunk'\nimport { StoreState } from './store'\n\nexport const http = (config: AxiosRequestConfig): AxiosPromise<AxiosInstance> => {\n\tconst Http = axios.create({\n\t\tresponseType: 'json',\n\t});\n\n\tHttp.interceptors.request.use((config: AxiosRequestConfig) => {\n\t\treturn config;\n\t}, (error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t});\n\n\tHttp.interceptors.response.use((response: AxiosResponse) => {\n\t\treturn response;\n\t}, (error: AxiosError) => {\n\t    return Promise.reject(error);\n\t});\n\n\treturn Http(config);\n}\n\nexport type Thunk = ThunkAction<void, StoreState, void, Action>;","import { Location } from 'diver-models'\nimport {\n\tLocationActions,\n\tLOAD_LOCATIONS\n} from './types';\n\nexport const loadLocations = (locations: Location[]): LocationActions => {\n    return { type: LOAD_LOCATIONS, locations }\n}\n","import { Location } from 'diver-models'\n\nexport const LOAD_LOCATIONS = 'LOAD_LOCATIONS'\n\nexport interface LoadLocations {\n\ttype: typeof LOAD_LOCATIONS\n\tlocations: Location[]\n}\n\nexport type LocationActions = LoadLocations","import { AxiosResponse, AxiosError } from 'axios'\nimport { StoreState } from '../../store'\nimport { http, Thunk } from '../../http'\n\nimport {\n\tloadLocations\n} from './actions';\n\nexport function fetchLocations(): Thunk {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\thttp({\n\t\t\tmethod: 'get',\n\t\t\turl: 'http://157.245.3.84:3000/location'\n\t\t})\n\t\t.then((response: AxiosResponse) => {\n\t\t\tdispatch(loadLocations(response.data));\n\t\t})\n\t\t.catch((error: AxiosError) => {\n\t\t\t// TODO\n\t\t});\n\t}\n}","import { StoreState } from '../'\n\nexport const selectedSpot = (state: StoreState) => {\n    const parts = state.router.location.pathname.split('/').filter(p => p !== '')\n    const id = parts[0] === 'dive-spot' ? parts[1] : null\n    return id && id in state.spots.byId ? state.spots.byId[id] : null\n}\n\nexport const allLocations = (state: StoreState) => {\n    return Object.values(state.spots.byId)\n}\n","export const mapStyle = [\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#e9e9e9\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 29\n            },\n            {\n                \"weight\": 0.2\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 18\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#dedede\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": 36\n            },\n            {\n                \"color\": \"#333333\"\n            },\n            {\n                \"lightness\": 40\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f2f2f2\"\n            },\n            {\n                \"lightness\": 19\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#fefefe\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#fefefe\"\n            },\n            {\n                \"lightness\": 17\n            },\n            {\n                \"weight\": 1.2\n            }\n        ]\n    }\n]","import React, { ReactNode } from 'react'\nimport { Coordinate } from 'diver-models'\nimport GoogleMapReact from 'google-map-react'\nimport { mapStyle } from '../../mapStyle'\n\nconst defaultProps = {\n    zoom: 8\n}\n\ntype Props = {\n    center: Coordinate\n    children: ReactNode\n} & Partial<typeof defaultProps>\n\nconst GoogleMap = (props: Props) => {\n    const { center, children, zoom } = { ...defaultProps, ...props }\n\n    return (\n        <GoogleMapReact\n            bootstrapURLKeys={{ key: 'AIzaSyCbiVq77U94A6g0sEK59tcKlKj_1NFMZkE' }}\n            center={{lat: center.latitude, lng: center.longitude}}\n            defaultZoom={6}\n            zoom={zoom}\n            options={{\n                styles: mapStyle,\n                disableDefaultUI: true\n            }}\n        >\n            {children}\n        </GoogleMapReact>\n    )\n}\n\nexport default GoogleMap\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport clsx from 'clsx'\nconst Color = require('color')\n\nconst defaultProps = {\n    color: 'primary' as 'primary' | 'secondary'\n}\n\ntype Props = {\n    lat: number\n    lng: number\n    active?: boolean\n    onClick?: () => void\n} & Partial<typeof defaultProps>\n\nconst Marker = (props: Props) => {\n    const classes = useStyles(props)\n    const { color, onClick, active } = { ...defaultProps, ...props }\n\n    const handleClick = () => {\n        if (onClick) {\n            onClick()\n        }\n    }\n\n    const markerClass = clsx(\n        classes.container, \n        color === 'primary' ? classes.primary : classes.secondary,\n        onClick && classes.clickable,\n        active && classes.active\n    )\n\n    return (\n        <div onClick={handleClick} className={markerClass}>\n            <div></div>\n        </div>\n    )\n}\n\nexport default Marker\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        position: 'absolute',\n        transform: 'translate(-50%, -50%)',\n        width: '20px',\n        height: '20px',\n        borderRadius: '50%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& div': {\n            width: '8px',\n            height: '8px',\n            borderRadius: '50%'\n        }\n    },\n    active: {\n        width: '30px',\n        height: '30px',  \n    },\n    primary: {\n        backgroundColor: Color(theme.palette.primary.main).fade(0.65).rgb().string(),\n        '& div': {\n            backgroundColor: theme.palette.primary.main\n        }\n    },\n    secondary: {\n        backgroundColor: Color(theme.palette.secondary.main).fade(0.65).rgb().string(),\n        '& div': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    },\n    clickable: {\n        cursor: 'pointer'\n    }\n}))\n","import { StoreState } from '../'\n\nexport const getCenter = (state: StoreState) => {\n    return state.map.center\n}\n\nexport const getZoom = (state: StoreState) => {\n    return state.map.zoom\n}\n ","import { Coordinate } from 'diver-models'\nimport {\n\tMapActions,\n\tSET_CENTER,\n\tSET_ZOOM\n} from './types';\n\nexport const setCenter = (coordinate: Coordinate): MapActions => {\n    return { type: SET_CENTER, coordinate }\n}\n\nexport const setZoom = (zoom: number): MapActions => {\n\treturn { type: SET_ZOOM, zoom }\n}\n","import { Coordinate } from \"diver-models\"\n\nexport const SET_CENTER = 'SET_CENTER'\nexport const SET_ZOOM = 'SET_ZOOM'\n\nexport interface SetCenter {\n\ttype: typeof SET_CENTER\n\tcoordinate: Coordinate\n}\n\nexport interface SetZoom {\n\ttype: typeof SET_ZOOM,\n\tzoom: number\n}\n\nexport type MapActions = SetCenter | SetZoom","import { StoreState } from '../'\n\nexport const urlSegments = (state: StoreState) => {\n    return state.router.location.pathname.split('/').filter(p => p !== '')\n}\n","import React, { ReactNode } from 'react'\nimport MapIcon from '@material-ui/icons/MapOutlined'\nimport ExploreIcon from '@material-ui/icons/ExploreOutlined'\nimport { makeStyles, Paper } from '@material-ui/core'\nimport clsx from 'clsx'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { urlSegments } from '../store/router/selectors'\nimport { shallowEqual } from 'recompose'\n\ntype ItemProps = {\n    icon: ReactNode\n    active: boolean\n    onClick: () => void\n}\n\nconst NavigationItem = (props: ItemProps) => {\n    const classes = useStyles()\n    const { icon, active, onClick } = props\n\n    return (\n        <div onClick={onClick} className={clsx(classes.item, active && classes.itemActive)}>\n            {icon}\n        </div>\n    )\n}\n\ntype Props = {\n    activeIndex: number\n}\n\nconst Navigation = (props: Props) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const urlParts = useSelector(urlSegments, shallowEqual)\n\n    return (\n        <Paper elevation={2} className={classes.container}>\n            <NavigationItem onClick={() => dispatch(push('/explore'))} active={urlParts[0] === 'explore' } icon={<ExploreIcon />}/>\n            <NavigationItem onClick={() => dispatch(push('/map'))} active={urlParts[0] === 'map' || urlParts[0] === 'dive-spot' || urlParts[0] === 'center' } icon={<MapIcon />}/>\n        </Paper>\n    )\n}\n\nexport default Navigation\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        backgroundColor: '#fff',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        zIndex: 200,\n        borderRadius: 0,\n        [theme.breakpoints.up('sm')]: {\n            flexDirection: 'column'\n        }\n    },\n    item: {\n        cursor: 'pointer',\n        height: '56px',\n        width: '48px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        boxSizing: 'border-box',\n        [theme.breakpoints.up('sm')]: {\n            height: '56px',\n            width: '80px'\n        },\n        '& .MuiSvgIcon-root': {\n            fontSize: '1.875rem',\n            color: 'rgba(0, 0, 0, 0.35)',\n            [theme.breakpoints.up('sm')]: {\n                fontSize: '2.1875rem'\n            }\n        },\n        '&:hover': {\n            '& .MuiSvgIcon-root': {\n                color: 'rgba(0, 0, 0, 0.45)'\n            }\n        }\n    },\n    itemActive: {\n        borderBottom: `3px solid ${theme.palette.primary.main}`,\n        borderLeft: `none`,\n        [theme.breakpoints.up('sm')]: {\n            borderBottom: `none`,\n            borderLeft: `3px solid ${theme.palette.primary.main}`\n        },\n        '& .MuiSvgIcon-root': {\n            margin: '0 0 -3px 0',\n            color: theme.palette.primary.main,\n            [theme.breakpoints.up('sm')]: {\n                marginLeft: '0 0 0 -3px',\n            }\n        },\n        '&:hover': {\n            '& .MuiSvgIcon-root': {\n                color: theme.palette.primary.main\n            }\n        }\n    }\n}))\n","import React, { ReactNode } from 'react'\nimport Navigation from './Navigation'\nimport { makeStyles } from '@material-ui/core'\n\ntype Props = {\n    children: ReactNode\n}\n\nconst Layout = (props: Props) => {\n    const { children } = props\n    const classes = useStyles()\n\n    return (\n        <div className={classes.container}>\n            <Navigation activeIndex={1} />\n            <div style={{ display: 'flex', flexGrow: 1, height: '100%', position: 'relative' }}>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Layout\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        height: '100%',\n        width: '100%',\n        flexDirection: 'column-reverse',\n        [theme.breakpoints.up('sm')]: {\n            flexDirection: 'row',\n        }\n    }\n}))\n","import { StoreState } from '../'\nimport { Center } from 'diver-models'\n\nexport const selectedCenter = (state: StoreState): Center | null => {\n    const parts = state.router.location.pathname.split('/').filter(p => p !== '')\n    const id = parts[0] === 'center' ? parts[1] : null\n    return id && id in state.centers.byId ? state.centers.byId[id] : null\n}\n\nexport const allCenters = (state: StoreState) => {\n    return Object.values(state.centers.byId)\n}\n","import { Center } from 'diver-models'\nimport {\n\tCenterActions,\n\tLOAD_CENTERS\n} from './types';\n\nexport const loadCenters = (centers: Center[]): CenterActions => {\n    return { type: LOAD_CENTERS, centers }\n}\n","import { Center } from 'diver-models'\n\nexport const LOAD_CENTERS = 'LOAD_CENTERS'\n\nexport interface LoadCenters {\n\ttype: typeof LOAD_CENTERS\n\tcenters: Center[]\n}\n\nexport type CenterActions = LoadCenters","import { AxiosResponse, AxiosError } from 'axios'\nimport { StoreState } from '../../store'\nimport { http, Thunk } from '../../http'\n\nimport {\n\tloadCenters\n} from './actions';\n\nexport function fetchCenters(): Thunk {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\thttp({\n\t\t\tmethod: 'get',\n\t\t\turl: 'http://157.245.3.84:3000/center'\n\t\t})\n\t\t.then((response: AxiosResponse) => {\n\t\t\tdispatch(loadCenters(response.data));\n\t\t})\n\t\t.catch((error: AxiosError) => {\n\t\t\t// TODO\n\t\t});\n\t}\n}","import React, { ReactNode } from 'react'\nimport { makeStyles, Paper } from '@material-ui/core'\n\ntype Props = {\n    lat: number\n    lng: number\n    children: ReactNode\n}\n\nconst Popup = (props: Props) => {\n    const classes = useStyles()\n    const { children } = props\n\n    return (\n        <Paper elevation={3} className={classes.container}>\n            {children}\n        </Paper>\n    )\n}\n\nexport default Popup\n\nconst useStyles = makeStyles({\n    container: {\n        textAlign: 'center',\n        width: '250px',\n        height: '100px',\n        borderRadius: '5px',\n        padding: '8px',\n        transform: 'translate(-50%, -50%)',\n        marginTop: '-56px'\n    }\n})\n","import React from 'react'\nimport { Typography, Button } from '@material-ui/core'\nimport Popup from './Popup'\nimport { Location } from 'diver-models'\n\ntype Props = {\n    lat: number\n    lng: number\n    location: Location\n    onViewClick: () => void\n}\n\nconst SpotPopup = (props: Props) => {\n    const { lat, lng, location, onViewClick } = props\n\n    return (\n        <Popup lat={lat} lng={lng}>\n            <Typography variant=\"overline\" style={{ fontSize: '0.65rem' }}>{location.locationType} dive</Typography>\n            <Typography variant=\"h6\" gutterBottom style={{fontSize: '1rem', marginTop: '-8px'}}>{location.name}</Typography>\n            <Button \n                size=\"small\" \n                color=\"primary\"\n                onClick={onViewClick}\n            >\n                View\n            </Button>\n        </Popup>\n    )\n}\n\nexport default SpotPopup\n","import React from 'react'\nimport { Typography, Button } from '@material-ui/core'\nimport Popup from './Popup'\nimport { Center } from 'diver-models'\n\ntype Props = {\n    lat: number\n    lng: number\n    center: Center\n    onViewClick: () => void\n}\n\nconst CenterPopup = (props: Props) => {\n    const { lat, lng, center, onViewClick } = props\n\n    return (\n        <Popup lat={lat} lng={lng}>\n            <Typography variant=\"h6\" gutterBottom style={{fontSize: '1rem', marginTop: '-8px'}}>{center.name}</Typography>\n            <Button \n                size=\"small\" \n                color=\"primary\"\n                onClick={onViewClick}\n            >\n                View\n            </Button>\n        </Popup>\n    )\n}\n\nexport default CenterPopup\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, shallowEqual, useSelector } from 'react-redux'\nimport { fetchLocations } from '../store/spots/thunks'\nimport { push } from 'connected-react-router'\nimport { selectedSpot, allLocations } from '../store/spots/selectors'\nimport { Location, Center } from 'diver-models'\nimport GoogleMap from '../components/Map/GoogleMap'\nimport Marker from '../components/Map/Marker'\nimport { getCenter, getZoom } from '../store/map/selectors'\nimport { setCenter, setZoom } from '../store/map/actions'\nimport Layout from '../components/Layout'\nimport { allCenters } from '../store/center/selectors'\nimport { fetchCenters } from '../store/center/thunks'\nimport { makeStyles } from '@material-ui/core'\nimport SpotPopup from '../components/Map/SpotPopup'\nimport CenterPopup from '../components/Map/CenterPopup'\n\ntype Props = {\n\n}\n\nconst Map = (props: Props) => {\n    const classes = useStyles(props)\n    const dispatch = useDispatch()\n    const locations = useSelector(allLocations, shallowEqual)\n    const centers = useSelector(allCenters, shallowEqual)\n    const selectedLocation = useSelector(selectedSpot, shallowEqual)\n    const mapCenter = useSelector(getCenter, shallowEqual)\n    const mapZoom = useSelector(getZoom, shallowEqual)\n    const [ activeLocation, setActiveLocation ] = useState(null as Location | Center | null)\n\n    useEffect(() => {\n        dispatch(fetchLocations())\n        dispatch(fetchCenters())\n    }, [dispatch])\n\n    useEffect(() => {\n        if (selectedLocation) {\n            dispatch(setCenter(selectedLocation.coordinate))\n            dispatch(setZoom(10))\n        }\n    }, [selectedLocation, dispatch])\n\n    const handleSpotClick = (location: Location) => {\n        dispatch(setCenter(location.coordinate))\n        dispatch(setZoom(10))\n        setActiveLocation(location)\n    }\n\n    const handleCenterClick = (center: Center) => {\n        dispatch(setCenter(center.coordinate))\n        dispatch(setZoom(10))\n        setActiveLocation(center)\n    }\n\n    return (\n        <Layout>\n            <GoogleMap\n                center={mapCenter}\n                zoom={mapZoom}\n            >\n                {locations.map(l => (\n                    <Marker \n                        active={selectedLocation !== null && l.id === selectedLocation.id} \n                        key={l.id} \n                        lat={l.coordinate.latitude} \n                        lng={l.coordinate.longitude} \n                        onClick={() => handleSpotClick(l)} \n                    />\n                ))}\n                {centers.map(c => (\n                    <Marker\n                        active={selectedLocation !== null && c.id === selectedLocation.id} \n                        key={c.id} \n                        lat={c.coordinate.latitude} \n                        lng={c.coordinate.longitude}\n                        onClick={() => handleCenterClick(c)}  \n                        color=\"secondary\" \n                    />\n                ))}\n                {activeLocation && isSpot(activeLocation) &&\n                    <SpotPopup \n                        location={activeLocation} \n                        lat={activeLocation.coordinate.latitude} \n                        lng={activeLocation.coordinate.longitude}\n                        onViewClick={() => dispatch(push(`/dive-spot/${activeLocation.id}`))}\n                    />\n                }\n                {activeLocation && isCenter(activeLocation) &&\n                    <CenterPopup \n                        center={activeLocation} \n                        lat={activeLocation.coordinate.latitude} \n                        lng={activeLocation.coordinate.longitude}\n                        onViewClick={() => dispatch(push(`/center/${activeLocation.id}`))}\n                    />\n                }\n            </GoogleMap>\n        </Layout>\n    )\n}\n\nexport default Map\n\nconst isSpot = (t: any): t is Location => (t as Location).id.substr(0, 2) === 'lo'\nconst isCenter = (t: any): t is Center => (t as Center).id.substr(0, 2) === 'ce'\n\nconst mapHeight = '325px'\n\nconst useStyles = makeStyles({\n    container: {\n        position: 'relative',\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n    },\n    backdrop: {\n        width: '100%',\n        height: mapHeight,\n        top: 0,\n        overflow: 'hidden'\n    },\n    mapFix: {\n        height: '375px',\n        marginTop: '-25px'\n    },\n    contentContainer: {\n        position: 'absolute',\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n        zIndex: 75,\n        overflowY: 'scroll',\n        top: 0\n    },\n    content: {\n        backgroundColor: '#fff',\n        width: '100%',\n        marginTop: mapHeight,\n    }\n})\n","import React, { ReactNode, useRef, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport debounce from 'lodash/debounce'\n\ntype Props = {\n    backdrop: ReactNode\n    backdropHeight: number\n    children: ReactNode\n    onBackdropVisible?: () => void\n    onBackdropHidden?: () => void\n}\n\nconst BackdropLayout = (props: Props) => {\n    const classes = useStyles(props)\n    const { backdrop, backdropHeight, children, onBackdropVisible, onBackdropHidden } = props\n    const scrollEl = useRef(null as any)\n    const scrollingEl = useRef(null as any)\n    \n    useEffect(\n        () => {\n            const handleScroll = () => {\n                const position = scrollingEl.current.getBoundingClientRect()\n                if (position.top < 1 && onBackdropHidden) {\n                    onBackdropHidden()\n                } else if (position.top > 0 && onBackdropVisible) {\n                    onBackdropVisible()\n                }\n            }\n            scrollEl.current.addEventListener(\"scroll\", debounce(handleScroll))\n            return () => scrollEl.current.removeEventListener(\"scroll\", debounce(handleScroll))\n        },\n        [debounce] \n    );\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.backdrop} style={{ height: `${backdropHeight}px` }}>\n                {backdrop}\n            </div>\n            <div className={classes.contentContainer} ref={scrollEl}>\n                <div className={classes.content} style={{ marginTop: `${backdropHeight}px` }} ref={scrollingEl}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BackdropLayout\n\nconst useStyles = makeStyles({\n    container: {\n        position: 'relative',\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n    },\n    backdrop: {\n        width: '100%',\n        top: 0,\n        overflow: 'hidden'\n    },\n    contentContainer: {\n        position: 'absolute',\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n        zIndex: 75,\n        overflowY: 'scroll',\n        top: 0,\n    },\n    content: {\n        backgroundColor: '#fff',\n        width: '100%',\n        padding: '0 32px 24px 32px'\n    }\n})\n","import React, { ReactNode } from 'react'\nimport { Typography } from '@material-ui/core'\nimport { TypographyProps } from '@material-ui/core/Typography'\n\ntype Props = {\n    children: ReactNode\n} & TypographyProps\n\nconst Header = (props: Props) => {\n    const { children, ...rest } = props\n\n    return (\n        <Typography variant=\"h4\" component=\"h1\" { ...rest }>{children}</Typography>\n    )\n}\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport { Typography, makeStyles } from '@material-ui/core'\nimport { TypographyProps } from '@material-ui/core/Typography'\nimport PlaceIcon from '@material-ui/icons/Place'\n\ntype Props = {\n    children: ReactNode\n} & TypographyProps\n\nconst Place = (props: Props) => {\n    const classes = useStyles()\n    const { children, paragraph, ...rest } = props\n\n    return (\n        <div className={classes.container} style={{ marginBottom: paragraph ? '16px' : 0 }}>\n            <PlaceIcon className={classes.icon} />\n            <Typography variant=\"subtitle2\" className={classes.text} { ...rest }>{children}</Typography>\n        </div>\n    )\n}\n\nexport default Place\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    icon: {\n        fontSize: '1.125rem',\n        marginRight: '2px',\n        marginLeft: '-2px',\n        color: theme.palette.primary.main\n    },\n    text: {\n        color: theme.palette.primary.main\n    }\n}))\n","import React from 'react'\nimport Header from '../Typography/Header'\nimport Place from '../Typography/Place'\n\ntype Props = {\n    title: string\n    place: string\n}\n\nconst HeaderSection = (props: Props) => {\n    const { title, place } = props\n\n    return (\n        <div style={{padding: '24px 0'}}>\n            <Header>{title}</Header>\n            <Place>{place}</Place>\n        </div>\n    )\n}\n\nexport default HeaderSection\n","import React, { ReactNode } from 'react'\n\ntype Props = {\n    children: ReactNode\n}\n\nconst MaxWidth = (props: Props) => (\n    <div style={{ maxWidth: '800px', margin: '0 auto' }}>{ props.children }</div>\n)\n\nexport default MaxWidth\n","import React, { ReactNode } from 'react'\nimport { Typography } from '@material-ui/core'\nimport { TypographyProps } from '@material-ui/core/Typography'\n\ntype Props = {\n    children: ReactNode\n} & TypographyProps\n\nconst Subtitle = (props: Props) => {\n    const { children, ...rest } = props\n\n    return (\n        <Typography variant=\"h6\" {...rest}>{props.children}</Typography>\n    )\n}\n\nexport default Subtitle\n","import React, { ReactNode } from 'react'\nimport { makeStyles } from '@material-ui/core'\n\ntype Props = {\n    children: ReactNode\n}\n\nconst Section = (props: Props) => {\n    const classes = useStyles()\n\n    return (\n        <section className={classes.container}>\n            {props.children}\n        </section>\n    )\n}  \n\nexport default Section\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        marginBottom: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        borderBottom: `1px solid ${theme.palette.grey[300]}`\n    }\n}))","import React, { ReactNode } from 'react'\nimport { Typography, makeStyles } from '@material-ui/core'\nimport { TypographyProps } from '@material-ui/system'\n\ntype Props = {\n    children: ReactNode\n} & TypographyProps\n\nconst Body = (props: Props) => {\n    const classes = useStyles()\n    const { children, ...rest } = props\n\n    return (\n        <Typography variant=\"body1\" className={classes.text} { ...rest }>{children}</Typography>\n    )\n}\n\nexport default Body\n\nconst useStyles = makeStyles({\n    text: {\n       \n    }\n})\n","import React, { useState } from 'react'\nimport Layout from '../components/Layout'\nimport BackdropLayout from '../components/Layout/BackdropLayout'\nimport GoogleMap from '../components/Map/GoogleMap'\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { allLocations } from '../store/spots/selectors'\nimport { allCenters, selectedCenter } from '../store/center/selectors'\nimport { getCenter, getZoom } from '../store/map/selectors'\nimport { makeStyles } from '@material-ui/styles'\nimport Marker from '../components/Map/Marker'\nimport { threadId } from 'worker_threads'\nimport HeaderSection from '../components/Spot/HeaderSection'\nimport MaxWidth from '../components/Layout/MaxWidth'\nimport { Typography } from '@material-ui/core'\nimport Subtitle from '../components/Typography/Subtitle'\nimport Section from '../components/Section'\nimport Body from '../components/Typography/Body'\n\nconst mapHeight = 250\n\nconst Center = () => {\n    const classes = useStyles()\n    const [ showSticky, setShowSticky ] = useState(false)\n    const thisCenter = useSelector(selectedCenter, shallowEqual)\n    const locations = useSelector(allLocations, shallowEqual)\n    const centers = useSelector(allCenters, shallowEqual)\n    const mapCenter = useSelector(getCenter, shallowEqual)\n    const mapZoom = useSelector(getZoom, shallowEqual)\n    console.log(thisCenter)\n\n    return (\n        <Layout>\n            <BackdropLayout\n                onBackdropHidden={() => setShowSticky(true)}\n                onBackdropVisible={() => setShowSticky(false)}\n                backdropHeight={mapHeight}\n                backdrop={\n                    <div className={classes.mapFix}>\n                        <GoogleMap\n                            center={mapCenter}\n                            zoom={mapZoom}\n                        >\n                            {locations.map(l => (\n                                <Marker key={l.id} lat={l.coordinate.latitude} lng={l.coordinate.longitude} />\n                            ))}\n                            {centers.map(c => (\n                                <Marker active={thisCenter !== null && c.id === thisCenter.id} key={c.id} lat={c.coordinate.latitude} lng={c.coordinate.longitude} color=\"secondary\" />\n                            ))}\n                        </GoogleMap>\n                    </div>\n                }\n            >\n                {thisCenter !== null &&\n                    <MaxWidth>\n                        <div style={{ marginBottom: '24px' }}>\n                            <HeaderSection \n                                title={thisCenter.name}\n                                place={thisCenter.address.country.name}\n                            />\n                        </div>\n                        <Section>\n                            <Subtitle paragraph>Address</Subtitle>\n                            <Body>{thisCenter.address.address1}</Body>\n                            <Body>{thisCenter.address.zipcode}, {thisCenter.address.city.name}</Body>\n                            <Body>{thisCenter.address.country.name}</Body>\n                        </Section>\n                    </MaxWidth>\n                }\n            </BackdropLayout>\n        </Layout>\n    )\n}\n\nexport default Center\n\nconst useStyles = makeStyles({\n    mapFix: {\n        height: `${mapHeight + 50}px`,\n        marginTop: '-25px'\n    }\n})\n","import { IWeatherForecast } from '../../models/IWeatherForecast';\nimport {\n\tWeatherForecastActions,\n\tLOAD_WEATHER_FORECAST\n} from './types';\n\nexport const loadWeatherForecast = (weatherForecast: IWeatherForecast): WeatherForecastActions => {\n    return { type: LOAD_WEATHER_FORECAST, weatherForecast }\n}\n","import { IWeatherForecast } from '../../models/IWeatherForecast';\n\nexport const LOAD_WEATHER_FORECAST = 'LOAD_WEATHER_FORECAST';\n\nexport interface LoadWeatherForecast {\n\ttype: typeof LOAD_WEATHER_FORECAST;\n\tweatherForecast: IWeatherForecast;\n}\n\nexport type WeatherForecastActions = LoadWeatherForecast","import { StoreState } from '../'\nimport { Coordinate } from 'diver-models'\nimport { IWeatherForecast } from '../../models/IWeatherForecast'\n\nexport const weatherForCoordinate = (state: StoreState, coordinate: Coordinate): IWeatherForecast | null => {\n    const key = `${coordinate.latitude}${coordinate.longitude}`\n    return key in state.weatherForecasts.byCoordinate ? state.weatherForecasts.byCoordinate[key] : null\n}\n","import React, { ReactNode } from 'react'\nimport Icon from '@mdi/react'\nimport { mdiWeatherWindy } from '@mdi/js'\nimport { makeStyles } from '@material-ui/core'\nimport { mdiWeatherSunny, mdiWeatherPartlyCloudy, mdiWeatherCloudy, mdiWeatherRainy, mdiWeatherPouring } from '@mdi/js'\n\ntype Props = {\n    title: string\n    wind: number\n    icon: string\n    minTemp: number\n    maxTemp: number\n}\n\nconst Segment = (props: { width: number, children: ReactNode, align: 'left' | 'center' | 'right' }) => {\n    const classes = useStyles()\n    const justify = { left: 'flex-start', center: 'space-around', right: 'flex-end' }[props.align]\n\n    return (\n        <div style={{ width: `${props.width}%`, justifyContent: justify }} className={classes.segment}>{props.children}</div>\n    )\n}\n\nconst WeatherDay = (props: Props) => {\n    const classes = useStyles(props)\n\n    return (\n        <div className={classes.root}>\n            <Segment width={13} align=\"left\">\n                <p className={classes.title}>{props.title}</p>\n            </Segment>\n            <Segment width={18} align=\"center\">\n                <Icon\n                    className={classes.attributeIcon}\n                    path={mdiWeatherWindy}\n                    title=\"Wind\"\n                    size={0.7}\n                />\n                <p className={classes.attribute}>{props.wind}<span className={classes.attributePostfix}> m/s</span></p>\n            </Segment>\n            <Segment width={20} align=\"center\">\n                <Icon \n                    path={iconMap[props.icon].icon}\n                    style={{ fill: iconMap[props.icon].color }}\n                    size={1}\n                />\n            </Segment>\n            <Segment width={9} align=\"left\">\n                <p className={classes.attribute}>{props.minTemp}°C</p>\n            </Segment>\n            <Segment width={31} align=\"center\">\n                <div className={classes.tempGraphContainer}>\n                    <div className={classes.tempGraphBaseline} />\n                    <div className={classes.tempMinLine} style={{ width: tempToWidth(props.minTemp) }} />\n                    <div className={classes.tempMaxLine} style={{ width: tempToWidth(props.maxTemp) }} />\n                </div>\n            </Segment>\n            <Segment width={9} align=\"right\">\n                <p className={classes.attribute} style={{ color: '#222' }}>{props.maxTemp}°C</p>\n            </Segment>\n        </div>\n    )\n}\n\nexport default WeatherDay\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    segment: {\n        display: 'flex', \n        flexDirection: 'row', \n        alignItems: 'center'\n    },\n    title: {\n        fontSize: '1rem',\n        margin: 0\n    },\n    attributeIcon: {\n        marginRight: '4px',\n        fill: theme.palette.primary.main\n    },\n    attribute: {\n        color: '#666',\n        fontSize: '1rem',\n        margin: '8px 0'\n    },\n    attributePostfix: {\n        fontSize: '0.675rem',\n        fontWeight: 700\n    },\n    tempGraphContainer: {\n        position: 'relative',\n        width: '100%',\n        height: '15px',\n        margin: '0 8px'\n    },\n    tempGraphBaseline: {\n        position: 'absolute',\n        top: '7px',\n        width: '100%',\n        borderBottom: '1px dashed #ccc'\n    },\n    tempMinLine: {\n        backgroundColor: '#ccc',\n        height: '5px',\n        borderBottomLeftRadius: '2px',\n        borderTopLeftRadius: '2px',\n        position: 'absolute',\n        right: '50%',\n        top: '5px'\n    },\n    tempMaxLine: {\n        backgroundColor: '#FF8C20',\n        height: '5px',\n        borderBottomRightRadius: '2px',\n        borderTopRightRadius: '2px',\n        position: 'absolute',\n        left: '50%',\n        top: '5px'\n    }\n}))\n\nconst iconMap: { [key: string]: { icon: string, color: string } } = {\n    'clearSky': { icon: mdiWeatherSunny, color: '#FF8C20' },\n    'fewClouds': { icon: mdiWeatherPartlyCloudy, color: '#0791EC' },\n    'scatteredClouds': { icon: mdiWeatherCloudy, color: '#0791EC' },\n    'brokenClouds': { icon: mdiWeatherCloudy, color: '#0791EC' },\n    'rain': { icon: mdiWeatherRainy, color: '#030155' },\n    'showerRain': { icon: mdiWeatherPouring, color: '#030155' }\n}\n\nconst tempToWidth = (temp: number) => {\n    const drawnTemp = temp <= 40 ? temp : 40\n    return (2.5 * drawnTemp) / 2\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../store'\nimport { fetchWeatherForecast } from '../store/weather/thunks'\nimport { IWeatherForecast } from '../models/IWeatherForecast'\nimport { Coordinate } from 'diver-models'\nimport { weatherForCoordinate } from '../store/weather/selectors'\nimport WeatherDay from './WeatherDay'\n\ntype Props = {\n    coordinate: Coordinate\n    weatherForecast: IWeatherForecast | null\n    fetchWeatherForecast: typeof fetchWeatherForecast\n}\n\nconst mapStateToProps = (state: StoreState, ownProps: Pick<Props, 'coordinate'>) => ({\n    weatherForecast: weatherForCoordinate(state, ownProps.coordinate)\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    fetchWeatherForecast: (coordinate: Coordinate) => dispatch(fetchWeatherForecast(coordinate))\n})\n\nclass Weather extends React.Component<Props, {}> {\n    componentDidMount() {\n        this.props.fetchWeatherForecast(this.props.coordinate)\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        if (prevProps.coordinate !== this.props.coordinate) {\n            this.props.fetchWeatherForecast(this.props.coordinate)\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <div style={{ display: 'flex', flexDirection: 'column', marginBottom: '24px' }}>\n                    <WeatherDay title=\"Sun\" icon=\"clearSky\" wind={3.6} minTemp={14} maxTemp={23} />\n                    <WeatherDay title=\"Mon\" icon=\"showerRain\" wind={3.2} minTemp={13} maxTemp={23} />\n                    <WeatherDay title=\"Tue\" icon=\"fewClouds\" wind={3.4} minTemp={10} maxTemp={18} />\n                    <WeatherDay title=\"Wed\" icon=\"scatteredClouds\" wind={2.1} minTemp={10} maxTemp={19} />\n                    <WeatherDay title=\"Thu\" icon=\"scatteredClouds\" wind={1.8} minTemp={17} maxTemp={26} />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather)\n","import { AxiosResponse, AxiosError } from 'axios'\nimport { StoreState } from '../../store'\nimport { http, Thunk } from '../../http'\nimport { Coordinate } from 'diver-models'\n\nimport {\n\tloadWeatherForecast\n} from './actions';\n\nexport function fetchWeatherForecast(coordinate: Coordinate): Thunk {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\thttp({\n\t\t\tmethod: 'get',\n\t\t\turl: `http://0.0.0.0:3000/weather?latitude=${coordinate.latitude}&longitude=${coordinate.longitude}`\n\t\t})\n\t\t.then((response: AxiosResponse) => {\n\t\t\tdispatch(loadWeatherForecast(response.data));\n\t\t})\n\t\t.catch((error: AxiosError) => {\n\t\t\t// TODO\n\t\t});\n\t}\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Icon from '@mdi/react'\nimport { mdiSkullOutline, mdiSpaOutline, mdiSwapVertical, mdiIsland, mdiFerry } from '@mdi/js'\nimport { Typography } from '@material-ui/core'\nimport { Location } from 'diver-models'\n\ntype Props = {\n    location: Location\n}\n\nconst Attribute = (props: { text: string, icon: string }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.item}>\n            <Icon\n                className={classes.icon}\n                path={props.icon}\n                title=\"User Profile\"\n                size={1}\n            />\n            <Typography variant=\"body1\">{props.text}</Typography>\n        </div>\n    )\n}\n\nconst Attributes = (props: Props) => {\n    const classes = useStyles(props)\n    const { location } = props\n    const entryIcon = location.entryType === 'Shore' ? mdiIsland : mdiFerry\n\n    return (\n        <div className={classes.container}>\n            <Attribute icon={entryIcon} text={'Entry from ' + location.entryType.toLowerCase()} />\n            <Attribute icon={mdiSpaOutline} text={location.locationType} />\n            <Attribute icon={mdiSwapVertical} text={`${location.minDepth}-${location.maxDepth}m`} />\n        </div>\n    )\n}\n\nexport default Attributes\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        //marginBottom: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            flexDirection: 'row',\n        }\n    },\n    item: {\n        display: 'flex',\n        flexGrow: 1,\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        marginBottom: theme.spacing(2)\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        fill: '#555'\n    }\n}))\n","import React, { ReactNode, useState } from 'react'\nimport clsx from 'clsx'\nimport Body from '../Typography/Body'\nimport { Button, makeStyles } from '@material-ui/core'\n\ntype Props = {\n    children: ReactNode\n}\n\nconst Description = (props: Props) => {\n    const classes = useStyles()\n    const { children } = props\n    const [ open, setOpen ] = useState(false)\n\n    const handleClick = () => {\n        setOpen(!open)\n    }\n\n    return (\n        <>\n            {children !== '' &&\n                <>\n                    <div className={clsx(classes.textContainer, !open && classes.textContainerClosed )}>\n                        <Body>{children}</Body>\n                    </div>\n                    <Button onClick={handleClick} size=\"small\" color=\"primary\" className={classes.button}>{open ? 'View less' : 'View more'}</Button>\n                </>\n            }\n        </>\n    )\n}\n\nexport default Description\n\nconst useStyles = makeStyles(theme => ({\n    textContainer: {\n        marginBottom: theme.spacing(1),\n        position: 'relative',\n        height: 'auto',\n        overflow: 'hidden'\n    },\n    textContainerClosed: {\n        height: '52px',\n        overflow: 'hidden',\n    },\n    button: {\n        margin: '0 auto',\n        display: 'block',\n        textTransform: 'none'\n    }\n}))\n","import React from 'react'\nimport { GridList, GridListTile } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core'\n\ntype Props = {\n    images: string[]\n}\n\nconst Photos = (props: Props) => {\n    const classes = useStyles(props)\n\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={100} cols={3}>\n                {props.images.map((img, i) => \n                    <GridListTile key={i} cols={(i + 1) % 4 === 0 ? 2 : 1}>\n                        <img alt=\"\" src={img} />\n                    </GridListTile>\n                )}\n            </GridList>\n        </div>\n    )\n}\n\nexport default Photos\n\nconst useStyles = makeStyles({\n    root: {\n        marginBottom: '24px'\n    }\n})\n","import React from 'react'\nimport { Coordinate } from 'diver-models'\nimport Marker from './Map/Marker'\nimport { makeStyles } from '@material-ui/core'\nimport GoogleMap from './Map/GoogleMap'\n\ntype Props = {\n    coordinate: Coordinate\n}\n\nconst AvatarMap = (props: Props) => {\n    const classes = useStyles()\n    const { coordinate } = props\n\n    return (\n        <div className={classes.container}>\n            <div style={{ width: '190px', height: '190px', marginTop: '-20px', marginLeft: '-20px' }}> \n                <GoogleMap\n                    center={coordinate}\n                >\n                    <Marker lat={coordinate.latitude} lng={coordinate.longitude} />\n                </GoogleMap>\n            </div>\n        </div>\n    )\n}\n\nexport default AvatarMap\n\nconst useStyles = makeStyles({\n    container: {\n        width: '150px',\n        height: '150px',\n        overflow: 'hidden'\n    }\n})\n","import React from 'react'\nimport { Paper, makeStyles, Typography } from '@material-ui/core'\nimport AvatarMap from './AvatarMap'\nimport { Location } from 'diver-models'\n\ntype Props = {\n    spot: Location\n}\n\nconst SpotCard = (props: Props) => {\n    const classes = useStyles()\n    const { spot } = props\n\n    return (\n        <Paper className={classes.container}>\n            <AvatarMap coordinate={spot.coordinate} />\n            <div style={{padding: '8px'}}>\n                <Typography variant=\"overline\" style={{lineHeight: 1, fontSize: '0.6rem'}}>{spot.entryType} dive</Typography>\n                <Typography variant=\"subtitle2\" style={{lineHeight: 1.25}}>{spot.name}</Typography>\n            </div>\n        </Paper>\n    )\n}\n\nexport default SpotCard\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '150px',\n        height: '230px',\n        marginRight: '16px'\n    }\n})\n","import React from 'react'\nimport Weather from './Weather'\nimport Subtitle from './Typography/Subtitle'\nimport Attributes from './Spot/Attributes'\nimport Description from './Spot/Description'\nimport Photos from './Spot/Photos'\nimport image1 from '../photos/image1.jpg'\nimport image2 from '../photos/image2.jpg'\nimport image3 from '../photos/image3.jpg'\nimport image4 from '../photos/image4.jpg'\nimport image5 from '../photos/image5.jpg'\nimport { Location, Center } from 'diver-models'\nimport SpotCard from './SpotCard'\nimport { Grid } from '@material-ui/core'\nimport HeaderSection from './Spot/HeaderSection'\nimport Section from './Section'\n\ntype Props = {\n    location: Location\n    nearBySpots: Location[]\n    nearByCenters: Center[]\n}\n\nconst Spot = (props: Props) => {\n    const { location, nearBySpots } = props\n    const place = !location.city ? location.country.name : `${location.city.name}, ${location.country.name}`\n    \n    return (\n        <div>\n            <div style={{ marginBottom: '24px' }}>\n                <HeaderSection \n                    title={location.name}\n                    place={place}\n                />\n            </div>\n            <Section>\n                <Subtitle paragraph>About this spot</Subtitle>\n                <Attributes location={location} />\n                <Description>{ props.location.description }</Description>\n            </Section>\n\n            <Section>\n                <Subtitle paragraph>Weather forecast</Subtitle>\n                <Weather coordinate={props.location.coordinate} />\n            </Section>\n\n            <Section>\n                <Subtitle paragraph>Photos</Subtitle>\n                <Photos images={[image1, image2, image3, image4, image5]} />\n            </Section>\n\n            <Section>\n                <Subtitle paragraph>Other locations nearby</Subtitle>\n                <div style={{height: '250px', overflowX: 'scroll', display: 'flex', flexDirection: 'row'}}>\n                    {nearBySpots.map(s =>\n                        <SpotCard spot={s} />\n                    )}\n                </div>\n            </Section>\n        </div>\n    )\n}\n\nexport default Spot","import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch, shallowEqual, useSelector } from 'react-redux'\nimport { fetchLocations } from '../store/spots/thunks'\nimport { push } from 'connected-react-router'\nimport * as SpotComp from '../components/Spot'\nimport { selectedSpot, allLocations } from '../store/spots/selectors'\nimport { Location } from 'diver-models'\nimport GoogleMap from '../components/Map/GoogleMap'\nimport Marker from '../components/Map/Marker'\nimport { getCenter, getZoom } from '../store/map/selectors'\nimport { setCenter, setZoom } from '../store/map/actions'\nimport Layout from '../components/Layout'\nimport { allCenters } from '../store/center/selectors'\nimport { fetchCenters } from '../store/center/thunks'\nimport { makeStyles, Paper } from '@material-ui/core'\nimport debounce from 'lodash/debounce'\nimport MaxWidth from '../components/Layout/MaxWidth'\nimport HeaderSection from '../components/Spot/HeaderSection'\nimport BackdropLayout from '../components/Layout/BackdropLayout'\n\nconst mapHeight = 250\n\nconst Spot = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const locations = useSelector(allLocations, shallowEqual)\n    const centers = useSelector(allCenters, shallowEqual)\n    const selectedLocation = useSelector(selectedSpot, shallowEqual)\n    const mapCenter = useSelector(getCenter, shallowEqual)\n    const mapZoom = useSelector(getZoom, shallowEqual)\n    const [ showSticky, setShowSticky ] = useState(false)\n\n    useEffect(() => {\n        dispatch(fetchLocations())\n        dispatch(fetchCenters())\n    }, [dispatch])\n\n    useEffect(() => {\n        if (selectedLocation) {\n            dispatch(setCenter(selectedLocation.coordinate))\n            dispatch(setZoom(10))\n        }\n    }, [selectedLocation, dispatch])\n\n    const handleSpotClick = (location: Location) => {\n        dispatch(push(`/dive-spot/${location.id}`))\n        dispatch(setCenter(location.coordinate))\n        dispatch(setZoom(10))\n    }\n\n    return (\n        <Layout>\n            <Paper style={{position: 'absolute', top: 0, left: 0, right: 0, zIndex: 100, display: showSticky ? 'block' : 'none', borderRadius: '0', padding: '0 32px'}}>\n                <MaxWidth>\n                    <HeaderSection\n                        title={selectedLocation ? selectedLocation.name : ''}\n                        place={selectedLocation ? selectedLocation.country.name : ''}\n                    />\n                </MaxWidth>\n            </Paper>\n            <BackdropLayout\n                onBackdropHidden={() => setShowSticky(true)}\n                onBackdropVisible={() => setShowSticky(false)}\n                backdropHeight={mapHeight}\n                backdrop={\n                    <div className={classes.mapFix}>\n                        <GoogleMap\n                            center={mapCenter}\n                            zoom={mapZoom}\n                        >\n                            {locations.map(l => (\n                                <Marker active={selectedLocation !== null && l.id === selectedLocation.id} key={l.id} lat={l.coordinate.latitude} lng={l.coordinate.longitude} onClick={() => handleSpotClick(l)} />\n                            ))}\n                            {centers.map(c => (\n                                <Marker key={c.id} lat={c.coordinate.latitude} lng={c.coordinate.longitude} color=\"secondary\" />\n                            ))}\n                        </GoogleMap>\n                    </div>\n                }\n            >\n                <MaxWidth>\n                    {selectedLocation &&\n                        <SpotComp.default\n                            location={selectedLocation}\n                            nearBySpots={locations}\n                            nearByCenters={[]}\n                        />\n                    }\n                </MaxWidth>\n            </BackdropLayout>\n        </Layout>\n    )\n}\n\nexport default Spot\n\nconst useStyles = makeStyles({\n    mapFix: {\n        height: `${mapHeight + 50}px`,\n        marginTop: '-25px'\n    }\n})\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport Layout from '../components/Layout'\n\nconst Explore = () => {\n    return (\n        <Layout>\n            <Typography variant=\"h4\">Stay tuned!</Typography>\n        </Layout>\n    )\n}\n\nexport default Explore\n","import { Reducer, AnyAction } from 'redux';\nimport {\n\tLOAD_CENTERS\n} from './types'\nimport { Center } from 'diver-models';\n\nexport type CentersState = {\n    byId: { [key: string]: Center }\n}\n\nexport const centersReducer: Reducer<CentersState> = (state: CentersState = { byId: {} }, action: AnyAction): CentersState => {\n\tswitch (action.type) {\n        case LOAD_CENTERS:\n\t\t\treturn { \n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.centers.reduce((acc: { [key: string]: Center }, cur: Center) => ({ ...acc, [cur.id]: cur }), {})\n                }\n            }\n\t}\n\n\treturn state;\n}\n","import { Reducer, AnyAction } from 'redux';\nimport {\n\tLOAD_LOCATIONS\n} from './types'\nimport { Location } from 'diver-models';\n\nexport type LocationsState = {\n    byId: { [key: string]: Location }\n}\n\nexport const locationsReducer: Reducer<LocationsState> = (state: LocationsState = { byId: {} }, action: AnyAction): LocationsState => {\n\tswitch (action.type) {\n\t\tcase LOAD_LOCATIONS: \n\t\t\treturn { \n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.locations.reduce((acc: { [key: string]: Location }, cur: Location) => ({ ...acc, [cur.id]: cur }), {})\n                }\n            }\n\t}\n\n\treturn state;\n}\n","import { Reducer, AnyAction } from 'redux';\nimport { IWeatherForecast } from '../../models/IWeatherForecast';\nimport {\n\tLOAD_WEATHER_FORECAST\n} from './types'\n\nexport type WeatherForecastsState = {\n    byCoordinate: { [key: string]: IWeatherForecast }\n}\n\nexport const weatherForecastsReducer: Reducer<WeatherForecastsState> = (state: WeatherForecastsState = { byCoordinate: {} }, action: AnyAction): WeatherForecastsState => {\n\tswitch (action.type) {\n        case LOAD_WEATHER_FORECAST: \n            const key = `${action.weatherForecast.coordinate.latitude}${action.weatherForecast.coordinate.longitude}`\n\t\t\treturn { \n                ...state,\n                byCoordinate: {\n                    ...state.byCoordinate,\n                    [key]: action.weatherForecast\n                }\n            }\n\t}\n\n\treturn state;\n}\n","import { Reducer, AnyAction } from 'redux'\nimport { Coordinate } from 'diver-models'\nimport {\n\tSET_CENTER, SET_ZOOM\n} from './types'\n\nconst defaultState = {\n\tcenter: { latitude: 56, longitude: 12 } as Coordinate,\n\tzoom: 8\n}\n\nexport type MapState = typeof defaultState\n\nexport const mapReducer: Reducer<MapState> = (state: MapState = defaultState, action: AnyAction): MapState => {\n\tswitch (action.type) {\n\t\tcase SET_CENTER: \n\t\t\treturn { \n                ...state,\n                center: action.coordinate\n\t\t\t}\n\t\tcase SET_ZOOM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tzoom: action.zoom\n\t\t\t}\n\t}\n\n\treturn state;\n}\n","import { combineReducers } from 'redux'\nimport { History } from 'history'\nimport { RouterState, connectRouter } from 'connected-react-router'\nimport { centersReducer, CentersState } from '../store/center/reducer'\nimport { locationsReducer, LocationsState } from '../store/spots/reducer'\nimport { weatherForecastsReducer, WeatherForecastsState } from './weather/reducer'\nimport { mapReducer, MapState } from '../store/map/reducer'\n\nexport interface StoreState {\n    centers: CentersState\n    map: MapState\n\trouter: RouterState\n    spots: LocationsState\n    weatherForecasts: WeatherForecastsState\n}\n\nconst rootReducer = (history: History) => combineReducers({\n    centers: centersReducer,\n    map: mapReducer,\n\trouter: connectRouter(history),\n    spots: locationsReducer,\n    weatherForecasts: weatherForecastsReducer\n});\n\nexport default rootReducer","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './store';\n\nexport const history = createBrowserHistory()\n\nfunction configureStore(preloadedState?: any) {\n    const composeEnhancer: typeof compose = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    const store = createStore(\n        createRootReducer(history),\n        preloadedState,\n        composeEnhancer(\n            applyMiddleware(\n                routerMiddleware(history),\n                thunk\n            ),\n        ),\n    );\n\n    return store;\n}\n\nexport const store = configureStore();","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { theme } from './theme'\nimport Map from './containers/Map'\nimport Center from './containers/Center'\nimport Spot from './containers/Spot'\nimport Explore from './containers/Explore'\n\nimport { store, history } from './configureStore'\n\nconst App: React.FC = () => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Provider store={store}>\n                <ConnectedRouter history={history}>\n                    <CssBaseline />\n                    <Switch>\n                        <Route path=\"/dive-spot/:id\" render={() => <Spot />} />\n                        <Route path=\"/center/:id\" render={() => <Center />} />\n                        <Route path=\"/map\" render={() => <Map />} />\n                        <Route path=\"/explore\" render={() => <Explore />} />\n                        <Route path=\"/\" render={() => <Redirect to=\"/map\" />} />\n                    </Switch>\n                </ConnectedRouter>\n            </Provider>\n        </MuiThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/image1.3cbb4587.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image2.9d7ce690.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image3.24ee4e51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image4.a425af57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image5.88671b52.jpg\";"],"sourceRoot":""}