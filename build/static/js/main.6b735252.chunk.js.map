{"version":3,"sources":["theme.tsx","http.ts","store/spots/actions.ts","store/spots/types.ts","store/spots/thunks.ts","store/spots/selectors.ts","mapStyle.ts","components/Map/GoogleMap.tsx","components/Map/Marker.tsx","store/map/selectors.ts","store/map/actions.ts","store/map/types.ts","store/router/selectors.ts","components/Navigation.tsx","components/Layout.tsx","store/center/selectors.ts","store/center/actions.ts","store/center/types.ts","store/center/thunks.ts","components/Map/Popup.tsx","components/Map/SpotPopup.tsx","components/Map/CenterPopup.tsx","containers/Map.tsx","components/Layout/BackdropLayout.tsx","components/Typography/Header.tsx","components/Typography/Place.tsx","components/Spot/HeaderSection.tsx","components/Layout/MaxWidth.tsx","components/Typography/Subtitle.tsx","components/Section.tsx","components/Typography/Body.tsx","containers/Center.tsx","store/weather/actions.ts","store/weather/types.ts","store/weather/selectors.ts","components/WeatherDay.tsx","components/Weather.tsx","store/weather/thunks.ts","components/Spot/Attributes.tsx","components/Spot/Description.tsx","components/Spot/Photos.tsx","components/AvatarMap.tsx","components/SpotCard.tsx","components/HorizontalSlider.tsx","components/Spot.tsx","containers/Spot.tsx","containers/Explore.tsx","store/center/reducer.ts","store/spots/reducer.ts","store/weather/reducer.ts","store/map/reducer.ts","store/index.ts","configureStore.ts","App.tsx","serviceWorker.ts","index.tsx","photos/image1.jpg","photos/image2.jpg","photos/image3.jpg","photos/image4.jpg","photos/image5.jpg"],"names":["theme","responsiveFontSizes","createMuiTheme","palette","primary","main","secondary","text","typography","fontFamily","join","h1","fontWeight","h2","h3","h4","h5","h6","http","config","Http","axios","create","responseType","interceptors","request","use","error","Promise","reject","response","loadLocations","locations","type","fetchLocations","dispatch","getState","method","url","then","data","catch","selectedSpot","state","parts","router","location","pathname","split","filter","p","id","spots","byId","allLocations","Object","values","mapStyle","defaultProps","zoom","disableInteraction","GoogleMap","props","center","children","options","styles","disableDefaultUI","zoomControl","gestureHandling","bootstrapURLKeys","key","lat","latitude","lng","longitude","defaultZoom","Color","require","color","Marker","classes","useStyles","onClick","active","markerClass","clsx","container","clickable","className","makeStyles","position","transform","width","height","borderRadius","display","alignItems","justifyContent","backgroundColor","fade","rgb","string","cursor","getCenter","map","getZoom","setCenter","coordinate","setZoom","urlSegments","NavigationItem","icon","item","itemActive","Navigation","useDispatch","urlParts","useSelector","shallowEqual","Paper","elevation","push","flexDirection","zIndex","breakpoints","up","boxSizing","fontSize","borderBottom","borderLeft","margin","marginLeft","Layout","activeIndex","style","flexGrow","selectedCenter","centers","allCenters","loadCenters","fetchCenters","Popup","textAlign","padding","marginTop","SpotPopup","onViewClick","Typography","variant","locationType","gutterBottom","name","Button","size","CenterPopup","Map","selectedLocation","mapCenter","mapZoom","useState","activeLocation","setActiveLocation","useEffect","l","c","isSpot","isCenter","t","substr","maxHeight","backdrop","top","overflow","mapFix","contentContainer","overflowY","content","BackdropLayout","backdropHeight","onBackdropVisible","onBackdropHidden","scrollEl","useRef","scrollingEl","handleScroll","current","getBoundingClientRect","addEventListener","debounce","removeEventListener","ref","Header","rest","component","Place","paragraph","marginBottom","marginRight","HeaderSection","title","place","onBackClick","MaxWidth","maxWidth","Subtitle","Section","spacing","paddingBottom","grey","Body","Center","setShowSticky","thisCenter","address","country","address1","zipcode","city","mapHeight","loadWeatherForecast","weatherForecast","weatherForCoordinate","weatherForecasts","byCoordinate","Segment","justify","left","right","align","segment","WeatherDay","root","attributeIcon","path","mdiWeatherWindy","attribute","wind","attributePostfix","iconMap","fill","minTemp","tempGraphContainer","tempGraphBaseline","tempMinLine","tempToWidth","tempMaxLine","maxTemp","borderBottomLeftRadius","borderTopLeftRadius","borderBottomRightRadius","borderTopRightRadius","mdiWeatherSunny","mdiWeatherPartlyCloudy","mdiWeatherCloudy","mdiWeatherRainy","mdiWeatherPouring","temp","Weather","this","fetchWeatherForecast","prevProps","forecast","days","d","weekday","Math","round","windSpeed","React","Component","connect","ownProps","Attribute","Attributes","entryIcon","entryType","mdiIsland","mdiFerry","toLowerCase","mdiSpaOutline","mdiSwapVertical","minDepth","maxDepth","Description","open","setOpen","textContainer","textContainerClosed","button","textTransform","Photos","GridList","cellHeight","cols","images","img","i","GridListTile","alt","src","AvatarMap","SpotCard","spot","lineHeight","HorizontalSlider","flexWrap","overflowX","flex","Spot","nearBySpots","description","image1","image2","image3","image4","image5","s","showSticky","nearByCenters","Explore","centersReducer","action","reduce","acc","cur","locationsReducer","weatherForecastsReducer","defaultState","mapReducer","rootReducer","history","combineReducers","connectRouter","createBrowserHistory","store","preloadedState","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","routerMiddleware","thunk","configureStore","App","CssBaseline","render","to","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6b735252.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\n\nexport const theme = responsiveFontSizes(createMuiTheme({\n    palette: {\n        primary: {\n            main: '#0C7ED9'\n        },\n        secondary: {\n            main: '#FF8C20'\n        },\n        text: {\n            primary: '#484848'\n        }\n    },\n    typography: {\n        fontFamily: [\n            'Montserrat',\n            'sans-serif'\n        ].join(','),\n        h1: {\n            fontWeight: 500\n        },\n        h2: {\n            fontWeight: 500\n        },\n        h3: {\n            fontWeight: 500\n        },\n        h4: {\n            fontWeight: 500\n        },\n        h5: {\n            fontWeight: 500\n        },\n        h6: {\n            fontWeight: 500\n        },\n    }\n}))","import axios, { AxiosRequestConfig, AxiosResponse, AxiosError, AxiosInstance, AxiosPromise } from 'axios'\nimport { Action } from 'redux'\nimport { ThunkAction } from 'redux-thunk'\nimport { StoreState } from './store'\n\nexport const http = (config: AxiosRequestConfig): AxiosPromise<AxiosInstance> => {\n\tconst Http = axios.create({\n\t\tresponseType: 'json',\n\t});\n\n\tHttp.interceptors.request.use((config: AxiosRequestConfig) => {\n\t\treturn config;\n\t}, (error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t});\n\n\tHttp.interceptors.response.use((response: AxiosResponse) => {\n\t\treturn response;\n\t}, (error: AxiosError) => {\n\t    return Promise.reject(error);\n\t});\n\n\treturn Http(config);\n}\n\nexport type Thunk = ThunkAction<void, StoreState, void, Action>;","import { Location } from 'diver-models'\nimport {\n\tLocationActions,\n\tLOAD_LOCATIONS\n} from './types';\n\nexport const loadLocations = (locations: Location[]): LocationActions => {\n    return { type: LOAD_LOCATIONS, locations }\n}\n","import { Location } from 'diver-models'\n\nexport const LOAD_LOCATIONS = 'LOAD_LOCATIONS'\n\nexport interface LoadLocations {\n\ttype: typeof LOAD_LOCATIONS\n\tlocations: Location[]\n}\n\nexport type LocationActions = LoadLocations","import { AxiosResponse, AxiosError } from 'axios'\nimport { StoreState } from '../../store'\nimport { http, Thunk } from '../../http'\n\nimport {\n\tloadLocations\n} from './actions';\n\nexport function fetchLocations(): Thunk {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\thttp({\n\t\t\tmethod: 'get',\n\t\t\turl: 'http://157.245.3.84:3000/location'\n\t\t})\n\t\t.then((response: AxiosResponse) => {\n\t\t\tdispatch(loadLocations(response.data));\n\t\t})\n\t\t.catch((error: AxiosError) => {\n\t\t\t// TODO\n\t\t});\n\t}\n}","import { StoreState } from '../'\n\nexport const selectedSpot = (state: StoreState) => {\n    const parts = state.router.location.pathname.split('/').filter(p => p !== '')\n    const id = parts[0] === 'dive-spot' ? parts[1] : null\n    return id && id in state.spots.byId ? state.spots.byId[id] : null\n}\n\nexport const allLocations = (state: StoreState) => {\n    return Object.values(state.spots.byId)\n}\n","export const mapStyle = [\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#e9e9e9\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 29\n            },\n            {\n                \"weight\": 0.2\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 18\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#dedede\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": 36\n            },\n            {\n                \"color\": \"#333333\"\n            },\n            {\n                \"lightness\": 40\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f2f2f2\"\n            },\n            {\n                \"lightness\": 19\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#fefefe\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#fefefe\"\n            },\n            {\n                \"lightness\": 17\n            },\n            {\n                \"weight\": 1.2\n            }\n        ]\n    }\n]","import React, { ReactNode } from 'react'\nimport { Coordinate } from 'diver-models'\nimport GoogleMapReact from 'google-map-react'\nimport { mapStyle } from '../../mapStyle'\n\nconst defaultProps = {\n    zoom: 8,\n    disableInteraction: false\n}\n\ntype Props = {\n    center: Coordinate\n    children: ReactNode\n} & Partial<typeof defaultProps>\n\nconst GoogleMap = (props: Props) => {\n    const { center, children, zoom, disableInteraction } = { ...defaultProps, ...props }\n\n    let options: { [key: string]: any } = {\n        styles: mapStyle,\n        disableDefaultUI: true\n    }\n\n    if (disableInteraction) {\n        options = { ...options, zoomControl: false, gestureHandling: 'none' }\n    }\n\n    return (\n        <GoogleMapReact\n            bootstrapURLKeys={{ key: 'AIzaSyCbiVq77U94A6g0sEK59tcKlKj_1NFMZkE' }}\n            center={{lat: center.latitude, lng: center.longitude}}\n            defaultZoom={6}\n            zoom={zoom}\n            options={options}\n        >\n            {children}\n        </GoogleMapReact>\n    )\n}\n\nexport default GoogleMap\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport clsx from 'clsx'\nconst Color = require('color')\n\nconst defaultProps = {\n    color: 'primary' as 'primary' | 'secondary'\n}\n\ntype Props = {\n    lat: number\n    lng: number\n    active?: boolean\n    onClick?: () => void\n} & Partial<typeof defaultProps>\n\nconst Marker = (props: Props) => {\n    const classes = useStyles(props)\n    const { color, onClick, active } = { ...defaultProps, ...props }\n\n    const handleClick = () => {\n        if (onClick) {\n            onClick()\n        }\n    }\n\n    const markerClass = clsx(\n        classes.container, \n        color === 'primary' ? classes.primary : classes.secondary,\n        onClick && classes.clickable,\n        active && classes.active\n    )\n\n    return (\n        <div onClick={handleClick} className={markerClass}>\n            <div></div>\n        </div>\n    )\n}\n\nexport default Marker\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        position: 'absolute',\n        transform: 'translate(-50%, -50%)',\n        width: '20px',\n        height: '20px',\n        borderRadius: '50%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& div': {\n            width: '8px',\n            height: '8px',\n            borderRadius: '50%'\n        }\n    },\n    active: {\n        width: '30px',\n        height: '30px',  \n    },\n    primary: {\n        backgroundColor: Color(theme.palette.primary.main).fade(0.65).rgb().string(),\n        '& div': {\n            backgroundColor: theme.palette.primary.main\n        }\n    },\n    secondary: {\n        backgroundColor: Color(theme.palette.secondary.main).fade(0.65).rgb().string(),\n        '& div': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    },\n    clickable: {\n        cursor: 'pointer'\n    }\n}))\n","import { StoreState } from '../'\n\nexport const getCenter = (state: StoreState) => {\n    return state.map.center\n}\n\nexport const getZoom = (state: StoreState) => {\n    return state.map.zoom\n}\n ","import { Coordinate } from 'diver-models'\nimport {\n\tMapActions,\n\tSET_CENTER,\n\tSET_ZOOM\n} from './types';\n\nexport const setCenter = (coordinate: Coordinate): MapActions => {\n    return { type: SET_CENTER, coordinate }\n}\n\nexport const setZoom = (zoom: number): MapActions => {\n\treturn { type: SET_ZOOM, zoom }\n}\n","import { Coordinate } from \"diver-models\"\n\nexport const SET_CENTER = 'SET_CENTER'\nexport const SET_ZOOM = 'SET_ZOOM'\n\nexport interface SetCenter {\n\ttype: typeof SET_CENTER\n\tcoordinate: Coordinate\n}\n\nexport interface SetZoom {\n\ttype: typeof SET_ZOOM,\n\tzoom: number\n}\n\nexport type MapActions = SetCenter | SetZoom","import { StoreState } from '../'\n\nexport const urlSegments = (state: StoreState) => {\n    return state.router.location.pathname.split('/').filter(p => p !== '')\n}\n","import React, { ReactNode } from 'react'\nimport MapIcon from '@material-ui/icons/MapOutlined'\nimport ExploreIcon from '@material-ui/icons/ExploreOutlined'\nimport { makeStyles, Paper } from '@material-ui/core'\nimport clsx from 'clsx'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { urlSegments } from '../store/router/selectors'\nimport { shallowEqual } from 'recompose'\n\ntype ItemProps = {\n    icon: ReactNode\n    active: boolean\n    onClick: () => void\n}\n\nconst NavigationItem = (props: ItemProps) => {\n    const classes = useStyles()\n    const { icon, active, onClick } = props\n\n    return (\n        <div onClick={onClick} className={clsx(classes.item, active && classes.itemActive)}>\n            {icon}\n        </div>\n    )\n}\n\ntype Props = {\n    activeIndex: number\n}\n\nconst Navigation = (props: Props) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const urlParts = useSelector(urlSegments, shallowEqual)\n\n    return (\n        <Paper elevation={2} className={classes.container}>\n            <NavigationItem onClick={() => dispatch(push('/explore'))} active={urlParts[0] === 'explore' } icon={<ExploreIcon />}/>\n            <NavigationItem onClick={() => dispatch(push('/map'))} active={urlParts[0] === 'map' || urlParts[0] === 'dive-spot' || urlParts[0] === 'center' } icon={<MapIcon />}/>\n        </Paper>\n    )\n}\n\nexport default Navigation\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        backgroundColor: '#fff',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        zIndex: 200,\n        borderRadius: 0,\n        [theme.breakpoints.up('sm')]: {\n            flexDirection: 'column'\n        }\n    },\n    item: {\n        cursor: 'pointer',\n        height: '56px',\n        width: '48px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        boxSizing: 'border-box',\n        [theme.breakpoints.up('sm')]: {\n            height: '56px',\n            width: '80px'\n        },\n        '& .MuiSvgIcon-root': {\n            fontSize: '1.875rem',\n            color: 'rgba(0, 0, 0, 0.35)',\n            [theme.breakpoints.up('sm')]: {\n                fontSize: '2.1875rem'\n            }\n        },\n        '&:hover': {\n            '& .MuiSvgIcon-root': {\n                color: 'rgba(0, 0, 0, 0.45)'\n            }\n        }\n    },\n    itemActive: {\n        borderBottom: `3px solid ${theme.palette.primary.main}`,\n        borderLeft: `none`,\n        [theme.breakpoints.up('sm')]: {\n            borderBottom: `none`,\n            borderLeft: `3px solid ${theme.palette.primary.main}`\n        },\n        '& .MuiSvgIcon-root': {\n            margin: '0 0 -3px 0',\n            color: theme.palette.primary.main,\n            [theme.breakpoints.up('sm')]: {\n                marginLeft: '0 0 0 -3px',\n            }\n        },\n        '&:hover': {\n            '& .MuiSvgIcon-root': {\n                color: theme.palette.primary.main\n            }\n        }\n    }\n}))\n","import React, { ReactNode } from 'react'\nimport Navigation from './Navigation'\nimport { makeStyles } from '@material-ui/core'\n\ntype Props = {\n    children: ReactNode\n}\n\nconst Layout = (props: Props) => {\n    const { children } = props\n    const classes = useStyles()\n\n    return (\n        <div className={classes.container}>\n            <Navigation activeIndex={1} />\n            <div style={{ display: 'flex', flexGrow: 1, height: '100%', position: 'relative' }}>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Layout\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        height: '100%',\n        width: '100%',\n        flexDirection: 'column-reverse',\n        [theme.breakpoints.up('sm')]: {\n            flexDirection: 'row',\n        }\n    }\n}))\n","import { StoreState } from '../'\nimport { Center } from 'diver-models'\n\nexport const selectedCenter = (state: StoreState): Center | null => {\n    const parts = state.router.location.pathname.split('/').filter(p => p !== '')\n    const id = parts[0] === 'center' ? parts[1] : null\n    return id && id in state.centers.byId ? state.centers.byId[id] : null\n}\n\nexport const allCenters = (state: StoreState) => {\n    return Object.values(state.centers.byId)\n}\n","import { Center } from 'diver-models'\nimport {\n\tCenterActions,\n\tLOAD_CENTERS\n} from './types';\n\nexport const loadCenters = (centers: Center[]): CenterActions => {\n    return { type: LOAD_CENTERS, centers }\n}\n","import { Center } from 'diver-models'\n\nexport const LOAD_CENTERS = 'LOAD_CENTERS'\n\nexport interface LoadCenters {\n\ttype: typeof LOAD_CENTERS\n\tcenters: Center[]\n}\n\nexport type CenterActions = LoadCenters","import { AxiosResponse, AxiosError } from 'axios'\nimport { StoreState } from '../../store'\nimport { http, Thunk } from '../../http'\n\nimport {\n\tloadCenters\n} from './actions';\n\nexport function fetchCenters(): Thunk {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\thttp({\n\t\t\tmethod: 'get',\n\t\t\turl: 'http://157.245.3.84:3000/center'\n\t\t})\n\t\t.then((response: AxiosResponse) => {\n\t\t\tdispatch(loadCenters(response.data));\n\t\t})\n\t\t.catch((error: AxiosError) => {\n\t\t\t// TODO\n\t\t});\n\t}\n}","import React, { ReactNode } from 'react'\nimport { makeStyles, Paper } from '@material-ui/core'\n\ntype Props = {\n    lat: number\n    lng: number\n    children: ReactNode\n}\n\nconst Popup = (props: Props) => {\n    const classes = useStyles()\n    const { children } = props\n\n    return (\n        <Paper elevation={3} className={classes.container}>\n            {children}\n        </Paper>\n    )\n}\n\nexport default Popup\n\nconst useStyles = makeStyles({\n    container: {\n        textAlign: 'center',\n        width: '250px',\n        height: '100px',\n        borderRadius: '5px',\n        padding: '8px',\n        transform: 'translate(-50%, -50%)',\n        marginTop: '-56px'\n    }\n})\n","import React from 'react'\nimport { Typography, Button } from '@material-ui/core'\nimport Popup from './Popup'\nimport { Location } from 'diver-models'\n\ntype Props = {\n    lat: number\n    lng: number\n    location: Location\n    onViewClick: () => void\n}\n\nconst SpotPopup = (props: Props) => {\n    const { lat, lng, location, onViewClick } = props\n\n    return (\n        <Popup lat={lat} lng={lng}>\n            <Typography variant=\"overline\" style={{ fontSize: '0.65rem' }}>{location.locationType} dive</Typography>\n            <Typography variant=\"h6\" gutterBottom style={{fontSize: '1rem', marginTop: '-8px'}}>{location.name}</Typography>\n            <Button \n                size=\"small\" \n                color=\"primary\"\n                onClick={onViewClick}\n            >\n                View\n            </Button>\n        </Popup>\n    )\n}\n\nexport default SpotPopup\n","import React from 'react'\nimport { Typography, Button } from '@material-ui/core'\nimport Popup from './Popup'\nimport { Center } from 'diver-models'\n\ntype Props = {\n    lat: number\n    lng: number\n    center: Center\n    onViewClick: () => void\n}\n\nconst CenterPopup = (props: Props) => {\n    const { lat, lng, center, onViewClick } = props\n\n    return (\n        <Popup lat={lat} lng={lng}>\n            <Typography variant=\"h6\" gutterBottom style={{fontSize: '1rem', marginTop: '-8px'}}>{center.name}</Typography>\n            <Button \n                size=\"small\" \n                color=\"primary\"\n                onClick={onViewClick}\n            >\n                View\n            </Button>\n        </Popup>\n    )\n}\n\nexport default CenterPopup\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, shallowEqual, useSelector } from 'react-redux'\nimport { fetchLocations } from '../store/spots/thunks'\nimport { push } from 'connected-react-router'\nimport { selectedSpot, allLocations } from '../store/spots/selectors'\nimport { Location, Center } from 'diver-models'\nimport GoogleMap from '../components/Map/GoogleMap'\nimport Marker from '../components/Map/Marker'\nimport { getCenter, getZoom } from '../store/map/selectors'\nimport { setCenter, setZoom } from '../store/map/actions'\nimport Layout from '../components/Layout'\nimport { allCenters } from '../store/center/selectors'\nimport { fetchCenters } from '../store/center/thunks'\nimport { makeStyles } from '@material-ui/core'\nimport SpotPopup from '../components/Map/SpotPopup'\nimport CenterPopup from '../components/Map/CenterPopup'\n\ntype Props = {\n\n}\n\nconst Map = (props: Props) => {\n    const classes = useStyles(props)\n    const dispatch = useDispatch()\n    const locations = useSelector(allLocations, shallowEqual)\n    const centers = useSelector(allCenters, shallowEqual)\n    const selectedLocation = useSelector(selectedSpot, shallowEqual)\n    const mapCenter = useSelector(getCenter, shallowEqual)\n    const mapZoom = useSelector(getZoom, shallowEqual)\n    const [ activeLocation, setActiveLocation ] = useState(null as Location | Center | null)\n\n    useEffect(() => {\n        dispatch(fetchLocations())\n        dispatch(fetchCenters())\n    }, [dispatch])\n\n    useEffect(() => {\n        if (selectedLocation) {\n            dispatch(setCenter(selectedLocation.coordinate))\n            dispatch(setZoom(10))\n        }\n    }, [selectedLocation, dispatch])\n\n    const handleSpotClick = (location: Location) => {\n        dispatch(setCenter(location.coordinate))\n        dispatch(setZoom(10))\n        setActiveLocation(location)\n    }\n\n    const handleCenterClick = (center: Center) => {\n        dispatch(setCenter(center.coordinate))\n        dispatch(setZoom(10))\n        setActiveLocation(center)\n    }\n\n    return (\n        <Layout>\n            <GoogleMap\n                center={mapCenter}\n                zoom={mapZoom}\n            >\n                {locations.map(l => (\n                    <Marker \n                        active={selectedLocation !== null && l.id === selectedLocation.id} \n                        key={l.id} \n                        lat={l.coordinate.latitude} \n                        lng={l.coordinate.longitude} \n                        onClick={() => handleSpotClick(l)} \n                    />\n                ))}\n                {centers.map(c => (\n                    <Marker\n                        active={selectedLocation !== null && c.id === selectedLocation.id} \n                        key={c.id} \n                        lat={c.coordinate.latitude} \n                        lng={c.coordinate.longitude}\n                        onClick={() => handleCenterClick(c)}  \n                        color=\"secondary\" \n                    />\n                ))}\n                {activeLocation && isSpot(activeLocation) &&\n                    <SpotPopup \n                        location={activeLocation} \n                        lat={activeLocation.coordinate.latitude} \n                        lng={activeLocation.coordinate.longitude}\n                        onViewClick={() => dispatch(push(`/dive-spot/${activeLocation.id}`))}\n                    />\n                }\n                {activeLocation && isCenter(activeLocation) &&\n                    <CenterPopup \n                        center={activeLocation} \n                        lat={activeLocation.coordinate.latitude} \n                        lng={activeLocation.coordinate.longitude}\n                        onViewClick={() => dispatch(push(`/center/${activeLocation.id}`))}\n                    />\n                }\n            </GoogleMap>\n        </Layout>\n    )\n}\n\nexport default Map\n\nconst isSpot = (t: any): t is Location => (t as Location).id.substr(0, 2) === 'lo'\nconst isCenter = (t: any): t is Center => (t as Center).id.substr(0, 2) === 'ce'\n\nconst mapHeight = '325px'\n\nconst useStyles = makeStyles({\n    container: {\n        position: 'relative',\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n    },\n    backdrop: {\n        width: '100%',\n        height: mapHeight,\n        top: 0,\n        overflow: 'hidden'\n    },\n    mapFix: {\n        height: '375px',\n        marginTop: '-25px'\n    },\n    contentContainer: {\n        position: 'absolute',\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n        zIndex: 75,\n        overflowY: 'scroll',\n        top: 0\n    },\n    content: {\n        backgroundColor: '#fff',\n        width: '100%',\n        marginTop: mapHeight,\n    }\n})\n","import React, { ReactNode, useRef, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport debounce from 'lodash/debounce'\n\ntype Props = {\n    backdrop: ReactNode\n    backdropHeight: number\n    children: ReactNode\n    onBackdropVisible?: () => void\n    onBackdropHidden?: () => void\n}\n\nconst BackdropLayout = (props: Props) => {\n    const classes = useStyles(props)\n    const { backdrop, backdropHeight, children, onBackdropVisible, onBackdropHidden } = props\n    const scrollEl = useRef(null as any)\n    const scrollingEl = useRef(null as any)\n    \n    useEffect(\n        () => {\n            const handleScroll = () => {\n                const position = scrollingEl.current.getBoundingClientRect()\n                if (position.top < 1 && onBackdropHidden) {\n                    onBackdropHidden()\n                } else if (position.top > 0 && onBackdropVisible) {\n                    onBackdropVisible()\n                }\n            }\n            scrollEl.current.addEventListener(\"scroll\", debounce(handleScroll))\n            return () => scrollEl.current.removeEventListener(\"scroll\", debounce(handleScroll))\n        },\n        [debounce] \n    );\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.backdrop} style={{ height: `${backdropHeight}px` }}>\n                {backdrop}\n            </div>\n            <div className={classes.contentContainer} ref={scrollEl}>\n                <div className={classes.content} style={{ marginTop: `${backdropHeight}px` }} ref={scrollingEl}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BackdropLayout\n\nconst useStyles = makeStyles({\n    container: {\n        position: 'relative',\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n    },\n    backdrop: {\n        width: '100%',\n        top: 0,\n        overflow: 'hidden'\n    },\n    contentContainer: {\n        position: 'absolute',\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n        zIndex: 75,\n        overflowY: 'scroll',\n        top: 0,\n    },\n    content: {\n        backgroundColor: '#fff',\n        width: '100%',\n        padding: '0 32px 24px 32px'\n    }\n})\n","import React, { ReactNode } from 'react'\nimport { Typography } from '@material-ui/core'\nimport { TypographyProps } from '@material-ui/core/Typography'\n\ntype Props = {\n    children: ReactNode\n} & TypographyProps\n\nconst Header = (props: Props) => {\n    const { children, ...rest } = props\n\n    return (\n        <Typography variant=\"h4\" component=\"h1\" { ...rest }>{children}</Typography>\n    )\n}\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport { Typography, makeStyles } from '@material-ui/core'\nimport { TypographyProps } from '@material-ui/core/Typography'\nimport PlaceIcon from '@material-ui/icons/Place'\n\ntype Props = {\n    children: ReactNode\n} & TypographyProps\n\nconst Place = (props: Props) => {\n    const classes = useStyles()\n    const { children, paragraph, ...rest } = props\n\n    return (\n        <div className={classes.container} style={{ marginBottom: paragraph ? '16px' : 0 }}>\n            <PlaceIcon className={classes.icon} />\n            <Typography variant=\"subtitle2\" className={classes.text} { ...rest }>{children}</Typography>\n        </div>\n    )\n}\n\nexport default Place\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    icon: {\n        fontSize: '1.125rem',\n        marginRight: '2px',\n        marginLeft: '-2px',\n        color: theme.palette.primary.main\n    },\n    text: {\n        color: theme.palette.primary.main\n    }\n}))\n","import React from 'react'\nimport Header from '../Typography/Header'\nimport Place from '../Typography/Place'\nimport BackIcon from '@material-ui/icons/ArrowBackIos'\n\ntype Props = {\n    title: string\n    place: string\n    onBackClick: () => void\n}\n\nconst HeaderSection = (props: Props) => {\n    const { title, place, onBackClick } = props\n\n    return (\n        <div style={{padding: '24px 0', display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n            <BackIcon onClick={onBackClick} style={{marginRight: '8px', cursor: 'pointer'}} />\n            <div>\n                <Header>{title}</Header>\n                <Place>{place}</Place>\n            </div>\n        </div>\n    )\n}\n\nexport default HeaderSection\n","import React, { ReactNode } from 'react'\n\ntype Props = {\n    children: ReactNode\n}\n\nconst MaxWidth = (props: Props) => (\n    <div style={{ maxWidth: '800px', margin: '0 auto' }}>{ props.children }</div>\n)\n\nexport default MaxWidth\n","import React, { ReactNode } from 'react'\nimport { Typography } from '@material-ui/core'\nimport { TypographyProps } from '@material-ui/core/Typography'\n\ntype Props = {\n    children: ReactNode\n} & TypographyProps\n\nconst Subtitle = (props: Props) => {\n    const { children, ...rest } = props\n\n    return (\n        <Typography variant=\"h6\" {...rest}>{props.children}</Typography>\n    )\n}\n\nexport default Subtitle\n","import React, { ReactNode } from 'react'\nimport { makeStyles } from '@material-ui/core'\n\ntype Props = {\n    children: ReactNode\n}\n\nconst Section = (props: Props) => {\n    const classes = useStyles()\n\n    return (\n        <section className={classes.container}>\n            {props.children}\n        </section>\n    )\n}  \n\nexport default Section\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        marginBottom: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        borderBottom: `1px solid ${theme.palette.grey[300]}`\n    }\n}))","import React, { ReactNode } from 'react'\nimport { Typography, makeStyles } from '@material-ui/core'\nimport { TypographyProps } from '@material-ui/system'\n\ntype Props = {\n    children: ReactNode\n} & TypographyProps\n\nconst Body = (props: Props) => {\n    const classes = useStyles()\n    const { children, ...rest } = props\n\n    return (\n        <Typography variant=\"body1\" className={classes.text} { ...rest }>{children}</Typography>\n    )\n}\n\nexport default Body\n\nconst useStyles = makeStyles({\n    text: {\n       \n    }\n})\n","import React, { useState } from 'react'\nimport Layout from '../components/Layout'\nimport BackdropLayout from '../components/Layout/BackdropLayout'\nimport GoogleMap from '../components/Map/GoogleMap'\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { allLocations } from '../store/spots/selectors'\nimport { allCenters, selectedCenter } from '../store/center/selectors'\nimport { getCenter, getZoom } from '../store/map/selectors'\nimport { makeStyles } from '@material-ui/styles'\nimport Marker from '../components/Map/Marker'\nimport { threadId } from 'worker_threads'\nimport HeaderSection from '../components/Spot/HeaderSection'\nimport MaxWidth from '../components/Layout/MaxWidth'\nimport { Typography } from '@material-ui/core'\nimport Subtitle from '../components/Typography/Subtitle'\nimport Section from '../components/Section'\nimport Body from '../components/Typography/Body'\n\nconst mapHeight = 250\n\nconst Center = () => {\n    const classes = useStyles()\n    const [ showSticky, setShowSticky ] = useState(false)\n    const thisCenter = useSelector(selectedCenter, shallowEqual)\n    const locations = useSelector(allLocations, shallowEqual)\n    const centers = useSelector(allCenters, shallowEqual)\n    const mapCenter = useSelector(getCenter, shallowEqual)\n    const mapZoom = useSelector(getZoom, shallowEqual)\n\n    return (\n        <Layout>\n            <BackdropLayout\n                onBackdropHidden={() => setShowSticky(true)}\n                onBackdropVisible={() => setShowSticky(false)}\n                backdropHeight={mapHeight}\n                backdrop={\n                    <div className={classes.mapFix}>\n                        <GoogleMap\n                            center={mapCenter}\n                            zoom={mapZoom}\n                        >\n                            {locations.map(l => (\n                                <Marker key={l.id} lat={l.coordinate.latitude} lng={l.coordinate.longitude} />\n                            ))}\n                            {centers.map(c => (\n                                <Marker active={thisCenter !== null && c.id === thisCenter.id} key={c.id} lat={c.coordinate.latitude} lng={c.coordinate.longitude} color=\"secondary\" />\n                            ))}\n                        </GoogleMap>\n                    </div>\n                }\n            >\n                {thisCenter !== null &&\n                    <MaxWidth>\n                        <div style={{ marginBottom: '24px' }}>\n                            <HeaderSection \n                                onBackClick={() => {}}\n                                title={thisCenter.name}\n                                place={thisCenter.address.country.name}\n                            />\n                        </div>\n                        <Section>\n                            <Subtitle paragraph>Address</Subtitle>\n                            <Body>{thisCenter.address.address1}</Body>\n                            <Body>{thisCenter.address.zipcode}, {thisCenter.address.city.name}</Body>\n                            <Body>{thisCenter.address.country.name}</Body>\n                        </Section>\n                    </MaxWidth>\n                }\n            </BackdropLayout>\n        </Layout>\n    )\n}\n\nexport default Center\n\nconst useStyles = makeStyles({\n    mapFix: {\n        height: `${mapHeight + 50}px`,\n        marginTop: '-25px'\n    }\n})\n","import {\n\tWeatherForecastActions,\n\tLOAD_WEATHER_FORECAST\n} from './types';\nimport { FiveDayForecast } from 'diver-models';\n\nexport const loadWeatherForecast = (weatherForecast: FiveDayForecast): WeatherForecastActions => {\n    return { type: LOAD_WEATHER_FORECAST, weatherForecast }\n}\n","import { FiveDayForecast } from 'diver-models'\n\nexport const LOAD_WEATHER_FORECAST = 'LOAD_WEATHER_FORECAST'\n\nexport interface LoadWeatherForecast {\n\ttype: typeof LOAD_WEATHER_FORECAST;\n\tweatherForecast: FiveDayForecast;\n}\n\nexport type WeatherForecastActions = LoadWeatherForecast","import { StoreState } from '../'\nimport { Coordinate, FiveDayForecast } from 'diver-models'\n\nexport const weatherForCoordinate = (state: StoreState, coordinate: Coordinate): FiveDayForecast | null => {\n    const key = `${coordinate.latitude}${coordinate.longitude}`\n    return key in state.weatherForecasts.byCoordinate ? state.weatherForecasts.byCoordinate[key] : null\n}\n","import React, { ReactNode } from 'react'\nimport Icon from '@mdi/react'\nimport { mdiWeatherWindy } from '@mdi/js'\nimport { makeStyles } from '@material-ui/core'\nimport { mdiWeatherSunny, mdiWeatherPartlyCloudy, mdiWeatherCloudy, mdiWeatherRainy, mdiWeatherPouring } from '@mdi/js'\n\ntype Props = {\n    title: string\n    wind: number\n    icon: string\n    minTemp: number\n    maxTemp: number\n}\n\nconst Segment = (props: { width: number, children: ReactNode, align: 'left' | 'center' | 'right' }) => {\n    const classes = useStyles()\n    const justify = { left: 'flex-start', center: 'space-around', right: 'flex-end' }[props.align]\n\n    return (\n        <div style={{ width: `${props.width}%`, justifyContent: justify }} className={classes.segment}>{props.children}</div>\n    )\n}\n\nconst WeatherDay = (props: Props) => {\n    const classes = useStyles(props)\n\n    return (\n        <div className={classes.root}>\n            <Segment width={13} align=\"left\">\n                <p className={classes.title}>{props.title}</p>\n            </Segment>\n            <Segment width={18} align=\"center\">\n                <Icon\n                    className={classes.attributeIcon}\n                    path={mdiWeatherWindy}\n                    title=\"Wind\"\n                    size={0.7}\n                />\n                <p className={classes.attribute}>{props.wind}<span className={classes.attributePostfix}> m/s</span></p>\n            </Segment>\n            <Segment width={20} align=\"center\">\n                <Icon \n                    path={iconMap[props.icon].icon}\n                    style={{ fill: iconMap[props.icon].color }}\n                    size={1}\n                />\n            </Segment>\n            <Segment width={9} align=\"left\">\n                <p className={classes.attribute}>{props.minTemp}°C</p>\n            </Segment>\n            <Segment width={31} align=\"center\">\n                <div className={classes.tempGraphContainer}>\n                    <div className={classes.tempGraphBaseline} />\n                    <div className={classes.tempMinLine} style={{ width: tempToWidth(props.minTemp) }} />\n                    <div className={classes.tempMaxLine} style={{ width: tempToWidth(props.maxTemp) }} />\n                </div>\n            </Segment>\n            <Segment width={9} align=\"right\">\n                <p className={classes.attribute} style={{ color: '#222' }}>{props.maxTemp}°C</p>\n            </Segment>\n        </div>\n    )\n}\n\nexport default WeatherDay\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    segment: {\n        display: 'flex', \n        flexDirection: 'row', \n        alignItems: 'center'\n    },\n    title: {\n        fontSize: '1rem',\n        margin: 0\n    },\n    attributeIcon: {\n        marginRight: '4px',\n        fill: theme.palette.primary.main\n    },\n    attribute: {\n        color: '#666',\n        fontSize: '1rem',\n        margin: '8px 0'\n    },\n    attributePostfix: {\n        fontSize: '0.675rem',\n        fontWeight: 700\n    },\n    tempGraphContainer: {\n        position: 'relative',\n        width: '100%',\n        height: '15px',\n        margin: '0 8px'\n    },\n    tempGraphBaseline: {\n        position: 'absolute',\n        top: '7px',\n        width: '100%',\n        borderBottom: '1px dashed #ccc'\n    },\n    tempMinLine: {\n        backgroundColor: '#ccc',\n        height: '5px',\n        borderBottomLeftRadius: '2px',\n        borderTopLeftRadius: '2px',\n        position: 'absolute',\n        right: '50%',\n        top: '5px'\n    },\n    tempMaxLine: {\n        backgroundColor: '#FF8C20',\n        height: '5px',\n        borderBottomRightRadius: '2px',\n        borderTopRightRadius: '2px',\n        position: 'absolute',\n        left: '50%',\n        top: '5px'\n    }\n}))\n\nconst iconMap: { [key: string]: { icon: string, color: string } } = {\n    'clearSky': { icon: mdiWeatherSunny, color: '#FF8C20' },\n    'fewClouds': { icon: mdiWeatherPartlyCloudy, color: '#0791EC' },\n    'scatteredClouds': { icon: mdiWeatherCloudy, color: '#0791EC' },\n    'brokenClouds': { icon: mdiWeatherCloudy, color: '#0791EC' },\n    'rain': { icon: mdiWeatherRainy, color: '#030155' },\n    'showerRain': { icon: mdiWeatherPouring, color: '#030155' }\n}\n\nconst tempToWidth = (temp: number) => {\n    const drawnTemp = temp <= 40 ? temp : 40\n    return (2.5 * drawnTemp) / 2\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../store'\nimport { fetchWeatherForecast } from '../store/weather/thunks'\nimport { Coordinate, FiveDayForecast } from 'diver-models'\nimport { weatherForCoordinate } from '../store/weather/selectors'\nimport WeatherDay from './WeatherDay'\n\ntype Props = {\n    coordinate: Coordinate\n    weatherForecast: FiveDayForecast| null\n    fetchWeatherForecast: typeof fetchWeatherForecast\n}\n\nconst mapStateToProps = (state: StoreState, ownProps: Pick<Props, 'coordinate'>) => ({\n    weatherForecast: weatherForCoordinate(state, ownProps.coordinate)\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    fetchWeatherForecast: (coordinate: Coordinate) => dispatch(fetchWeatherForecast(coordinate))\n})\n\nclass Weather extends React.Component<Props, {}> {\n    componentDidMount() {\n        this.props.fetchWeatherForecast(this.props.coordinate)\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        if (prevProps.coordinate !== this.props.coordinate) {\n            this.props.fetchWeatherForecast(this.props.coordinate)\n        }\n    }\n\n    render() {\n        const forecast = this.props.weatherForecast\n\n        return (\n            <>\n                <div style={{ display: 'flex', flexDirection: 'column', marginBottom: '24px' }}>\n                    {forecast && forecast.days.map(d =>\n                        <WeatherDay key={d.weekday} title={d.weekday} icon={d.icon} wind={Math.round(d.windSpeed * 10) / 10} minTemp={Math.round(d.minTemp)} maxTemp={Math.round(d.maxTemp)} />  \n                    )}\n                </div>\n            </>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather)\n","import { AxiosResponse, AxiosError } from 'axios'\nimport { StoreState } from '../../store'\nimport { http, Thunk } from '../../http'\nimport { Coordinate } from 'diver-models'\n\nimport {\n\tloadWeatherForecast\n} from './actions';\n\nexport function fetchWeatherForecast(coordinate: Coordinate): Thunk {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\thttp({\n\t\t\tmethod: 'get',\n\t\t\turl: `http://157.245.3.84:3000/weather/five-day-forecast?latitude=${coordinate.latitude}&longitude=${coordinate.longitude}`\n\t\t})\n\t\t.then((response: AxiosResponse) => {\n\t\t\tdispatch(loadWeatherForecast(response.data));\n\t\t})\n\t\t.catch((error: AxiosError) => {\n\t\t\t// TODO\n\t\t});\n\t}\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Icon from '@mdi/react'\nimport { mdiSkullOutline, mdiSpaOutline, mdiSwapVertical, mdiIsland, mdiFerry } from '@mdi/js'\nimport { Typography } from '@material-ui/core'\nimport { Location } from 'diver-models'\n\ntype Props = {\n    location: Location\n}\n\nconst Attribute = (props: { text: string, icon: string }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.item}>\n            <Icon\n                className={classes.icon}\n                path={props.icon}\n                title=\"User Profile\"\n                size={1}\n            />\n            <Typography variant=\"body1\">{props.text}</Typography>\n        </div>\n    )\n}\n\nconst Attributes = (props: Props) => {\n    const classes = useStyles(props)\n    const { location } = props\n    const entryIcon = location.entryType === 'Shore' ? mdiIsland : mdiFerry\n\n    return (\n        <div className={classes.container}>\n            <Attribute icon={entryIcon} text={'Entry from ' + location.entryType.toLowerCase()} />\n            <Attribute icon={mdiSpaOutline} text={location.locationType} />\n            <Attribute icon={mdiSwapVertical} text={`${location.minDepth}-${location.maxDepth}m`} />\n        </div>\n    )\n}\n\nexport default Attributes\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        //marginBottom: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            flexDirection: 'row',\n        }\n    },\n    item: {\n        display: 'flex',\n        flexGrow: 1,\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        marginBottom: theme.spacing(2)\n    },\n    icon: {\n        marginRight: theme.spacing(1),\n        fill: '#555'\n    }\n}))\n","import React, { ReactNode, useState } from 'react'\nimport clsx from 'clsx'\nimport Body from '../Typography/Body'\nimport { Button, makeStyles } from '@material-ui/core'\n\ntype Props = {\n    children: ReactNode\n}\n\nconst Description = (props: Props) => {\n    const classes = useStyles()\n    const { children } = props\n    const [ open, setOpen ] = useState(false)\n\n    const handleClick = () => {\n        setOpen(!open)\n    }\n\n    return (\n        <>\n            {children !== '' &&\n                <>\n                    <div className={clsx(classes.textContainer, !open && classes.textContainerClosed )}>\n                        <Body>{children}</Body>\n                    </div>\n                    <Button onClick={handleClick} size=\"small\" color=\"primary\" className={classes.button}>{open ? 'View less' : 'View more'}</Button>\n                </>\n            }\n        </>\n    )\n}\n\nexport default Description\n\nconst useStyles = makeStyles(theme => ({\n    textContainer: {\n        marginBottom: theme.spacing(1),\n        position: 'relative',\n        height: 'auto',\n        overflow: 'hidden'\n    },\n    textContainerClosed: {\n        height: '52px',\n        overflow: 'hidden',\n    },\n    button: {\n        margin: '0 auto',\n        display: 'block',\n        textTransform: 'none'\n    }\n}))\n","import React from 'react'\nimport { GridList, GridListTile } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core'\n\ntype Props = {\n    images: string[]\n}\n\nconst Photos = (props: Props) => {\n    const classes = useStyles(props)\n\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={100} cols={3}>\n                {props.images.map((img, i) => \n                    <GridListTile key={i} cols={(i + 1) % 4 === 0 ? 2 : 1}>\n                        <img alt=\"\" src={img} />\n                    </GridListTile>\n                )}\n            </GridList>\n        </div>\n    )\n}\n\nexport default Photos\n\nconst useStyles = makeStyles({\n    root: {\n        marginBottom: '24px'\n    }\n})\n","import React from 'react'\nimport { Coordinate } from 'diver-models'\nimport Marker from './Map/Marker'\nimport { makeStyles } from '@material-ui/core'\nimport GoogleMap from './Map/GoogleMap'\n\ntype Props = {\n    coordinate: Coordinate\n}\n\nconst AvatarMap = (props: Props) => {\n    const classes = useStyles()\n    const { coordinate } = props\n\n    return (\n        <div className={classes.container}>\n            <div style={{ width: '190px', height: '190px', marginTop: '-20px', marginLeft: '-20px' }}> \n                <GoogleMap\n                    disableInteraction\n                    center={coordinate}\n                >\n                    <Marker lat={coordinate.latitude} lng={coordinate.longitude} />\n                </GoogleMap>\n            </div>\n        </div>\n    )\n}\n\nexport default AvatarMap\n\nconst useStyles = makeStyles({\n    container: {\n        width: '150px',\n        height: '150px',\n        overflow: 'hidden'\n    }\n})\n","import React from 'react'\nimport { Paper, makeStyles, Typography } from '@material-ui/core'\nimport AvatarMap from './AvatarMap'\nimport { Location } from 'diver-models'\n\ntype Props = {\n    spot: Location\n}\n\nconst SpotCard = (props: Props) => {\n    const classes = useStyles()\n    const { spot } = props\n\n    return (\n        <Paper className={classes.container}>\n            <AvatarMap coordinate={spot.coordinate} />\n            <div style={{padding: '8px'}}>\n                <Typography variant=\"overline\" style={{lineHeight: 1, fontSize: '0.6rem'}}>{spot.locationType} dive</Typography>\n                <Typography variant=\"subtitle2\" style={{lineHeight: 1.25}}>{spot.name}</Typography>\n            </div>\n        </Paper>\n    )\n}\n\nexport default SpotCard\n\nconst useStyles = makeStyles({\n    container: {\n        width: '150px',\n        height: '230px',\n        marginRight: '16px'\n    }\n})\n","import React, { ReactNode } from 'react'\nimport { makeStyles } from '@material-ui/core'\n\ntype Props = {\n    children: ReactNode\n}\n\nconst HorizontalSlider = (props: Props) => {\n    const classes = useStyles(props)\n\n    return (\n        <div className={classes.container}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default HorizontalSlider\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        overflowX: 'auto',\n        padding: '2px',\n        '-webkit-overflow-scrolling': 'touch',\n        '&::-webkit-scrollbar': {\n            display: 'none'\n        },\n\n        '& > *': {\n            flex: '0 0 auto'\n        }\n    }\n})\n","import React from 'react'\nimport Weather from './Weather'\nimport Subtitle from './Typography/Subtitle'\nimport Attributes from './Spot/Attributes'\nimport Description from './Spot/Description'\nimport Photos from './Spot/Photos'\nimport image1 from '../photos/image1.jpg'\nimport image2 from '../photos/image2.jpg'\nimport image3 from '../photos/image3.jpg'\nimport image4 from '../photos/image4.jpg'\nimport image5 from '../photos/image5.jpg'\nimport { Location, Center } from 'diver-models'\nimport SpotCard from './SpotCard'\nimport { Grid } from '@material-ui/core'\nimport HeaderSection from './Spot/HeaderSection'\nimport Section from './Section'\nimport HorizontalSlider from './HorizontalSlider'\n\ntype Props = {\n    location: Location\n    nearBySpots: Location[]\n    nearByCenters: Center[]\n}\n\nconst Spot = (props: Props) => {\n    const { location, nearBySpots } = props\n    \n    return (\n        <div>\n            <Section>\n                <Subtitle paragraph>About this spot</Subtitle>\n                <Attributes location={location} />\n                <Description>{ props.location.description }</Description>\n            </Section>\n\n            <Section>\n                <Subtitle paragraph>Weather forecast</Subtitle>\n                <Weather coordinate={props.location.coordinate} />\n            </Section>\n\n            <Section>\n                <Subtitle paragraph>Photos</Subtitle>\n                <Photos images={[image1, image2, image3, image4, image5]} />\n            </Section>\n\n            <Section>\n                <Subtitle paragraph>Other locations nearby</Subtitle>\n                <HorizontalSlider>\n                    {nearBySpots.map(s =>\n                        <SpotCard key={s.id} spot={s} />\n                    )}\n                </HorizontalSlider>\n            </Section>\n        </div>\n    )\n}\n\nexport default Spot","import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch, shallowEqual, useSelector } from 'react-redux'\nimport { fetchLocations } from '../store/spots/thunks'\nimport { push } from 'connected-react-router'\nimport * as SpotComp from '../components/Spot'\nimport { selectedSpot, allLocations } from '../store/spots/selectors'\nimport { Location } from 'diver-models'\nimport GoogleMap from '../components/Map/GoogleMap'\nimport Marker from '../components/Map/Marker'\nimport { getCenter, getZoom } from '../store/map/selectors'\nimport { setCenter, setZoom } from '../store/map/actions'\nimport Layout from '../components/Layout'\nimport { allCenters } from '../store/center/selectors'\nimport { fetchCenters } from '../store/center/thunks'\nimport { makeStyles, Paper } from '@material-ui/core'\nimport debounce from 'lodash/debounce'\nimport MaxWidth from '../components/Layout/MaxWidth'\nimport HeaderSection from '../components/Spot/HeaderSection'\nimport BackdropLayout from '../components/Layout/BackdropLayout'\n\nconst mapHeight = 250\n\nconst Spot = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const locations = useSelector(allLocations, shallowEqual)\n    const centers = useSelector(allCenters, shallowEqual)\n    const selectedLocation = useSelector(selectedSpot, shallowEqual)\n    const mapCenter = useSelector(getCenter, shallowEqual)\n    const mapZoom = useSelector(getZoom, shallowEqual)\n    const [ showSticky, setShowSticky ] = useState(false)\n\n    useEffect(() => {\n        dispatch(fetchLocations())\n        dispatch(fetchCenters())\n    }, [dispatch])\n\n    useEffect(() => {\n        if (selectedLocation) {\n            dispatch(setCenter(selectedLocation.coordinate))\n            dispatch(setZoom(10))\n        }\n    }, [selectedLocation, dispatch])\n\n    const handleSpotClick = (location: Location) => {\n        dispatch(push(`/dive-spot/${location.id}`))\n        dispatch(setCenter(location.coordinate))\n        dispatch(setZoom(10))\n    }\n\n    return (\n        <Layout>\n            <Paper style={{position: 'absolute', top: 0, left: 0, right: 0, zIndex: 100, display: showSticky ? 'block' : 'none', borderRadius: '0', padding: '0 32px'}}>\n                <MaxWidth>\n                    <HeaderSection\n                        onBackClick={() => dispatch(push('/map'))}\n                        title={selectedLocation ? selectedLocation.name : ''}\n                        place={selectedLocation ? selectedLocation.country.name : ''}\n                    />\n                </MaxWidth>\n            </Paper>\n            <BackdropLayout\n                onBackdropHidden={() => setShowSticky(true)}\n                onBackdropVisible={() => setShowSticky(false)}\n                backdropHeight={mapHeight}\n                backdrop={\n                    <div className={classes.mapFix}>\n                        <GoogleMap\n                            center={mapCenter}\n                            zoom={mapZoom}\n                        >\n                            {locations.map(l => (\n                                <Marker active={selectedLocation !== null && l.id === selectedLocation.id} key={l.id} lat={l.coordinate.latitude} lng={l.coordinate.longitude} onClick={() => handleSpotClick(l)} />\n                            ))}\n                            {centers.map(c => (\n                                <Marker key={c.id} lat={c.coordinate.latitude} lng={c.coordinate.longitude} color=\"secondary\" />\n                            ))}\n                        </GoogleMap>\n                    </div>\n                }\n            >\n                <MaxWidth>\n                    {selectedLocation &&\n                        <>\n                            <HeaderSection \n                                onBackClick={() => dispatch(push('/map'))}\n                                title={selectedLocation.name}\n                                place={selectedLocation ? selectedLocation.country.name : ''}\n                            />\n                            <SpotComp.default\n                                location={selectedLocation}\n                                nearBySpots={locations}\n                                nearByCenters={[]}\n                            />\n                        </>\n                    }\n                </MaxWidth>\n            </BackdropLayout>\n        </Layout>\n    )\n}\n\nexport default Spot\n\nconst useStyles = makeStyles({\n    mapFix: {\n        height: `${mapHeight + 50}px`,\n        marginTop: '-25px'\n    }\n})\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport Layout from '../components/Layout'\n\nconst Explore = () => {\n    return (\n        <Layout>\n            <Typography variant=\"h4\">Stay tuned!</Typography>\n        </Layout>\n    )\n}\n\nexport default Explore\n","import { Reducer, AnyAction } from 'redux';\nimport {\n\tLOAD_CENTERS\n} from './types'\nimport { Center } from 'diver-models';\n\nexport type CentersState = {\n    byId: { [key: string]: Center }\n}\n\nexport const centersReducer: Reducer<CentersState> = (state: CentersState = { byId: {} }, action: AnyAction): CentersState => {\n\tswitch (action.type) {\n        case LOAD_CENTERS:\n\t\t\treturn { \n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.centers.reduce((acc: { [key: string]: Center }, cur: Center) => ({ ...acc, [cur.id]: cur }), {})\n                }\n            }\n\t}\n\n\treturn state;\n}\n","import { Reducer, AnyAction } from 'redux';\nimport {\n\tLOAD_LOCATIONS\n} from './types'\nimport { Location } from 'diver-models';\n\nexport type LocationsState = {\n    byId: { [key: string]: Location }\n}\n\nexport const locationsReducer: Reducer<LocationsState> = (state: LocationsState = { byId: {} }, action: AnyAction): LocationsState => {\n\tswitch (action.type) {\n\t\tcase LOAD_LOCATIONS: \n\t\t\treturn { \n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.locations.reduce((acc: { [key: string]: Location }, cur: Location) => ({ ...acc, [cur.id]: cur }), {})\n                }\n            }\n\t}\n\n\treturn state;\n}\n","import { Reducer, AnyAction } from 'redux'\nimport {\n\tLOAD_WEATHER_FORECAST\n} from './types'\nimport { FiveDayForecast } from 'diver-models';\n\nexport type WeatherForecastsState = {\n    byCoordinate: { [key: string]: FiveDayForecast }\n}\n\nexport const weatherForecastsReducer: Reducer<WeatherForecastsState> = (state: WeatherForecastsState = { byCoordinate: {} }, action: AnyAction): WeatherForecastsState => {\n\tswitch (action.type) {\n        case LOAD_WEATHER_FORECAST: \n            const key = `${action.weatherForecast.coordinate.latitude}${action.weatherForecast.coordinate.longitude}`\n\t\t\treturn { \n                ...state,\n                byCoordinate: {\n                    ...state.byCoordinate,\n                    [key]: action.weatherForecast\n                }\n            }\n\t}\n\n\treturn state;\n}\n","import { Reducer, AnyAction } from 'redux'\nimport { Coordinate } from 'diver-models'\nimport {\n\tSET_CENTER, SET_ZOOM\n} from './types'\n\nconst defaultState = {\n\tcenter: { latitude: 56, longitude: 12 } as Coordinate,\n\tzoom: 8\n}\n\nexport type MapState = typeof defaultState\n\nexport const mapReducer: Reducer<MapState> = (state: MapState = defaultState, action: AnyAction): MapState => {\n\tswitch (action.type) {\n\t\tcase SET_CENTER: \n\t\t\treturn { \n                ...state,\n                center: action.coordinate\n\t\t\t}\n\t\tcase SET_ZOOM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tzoom: action.zoom\n\t\t\t}\n\t}\n\n\treturn state;\n}\n","import { combineReducers } from 'redux'\nimport { History } from 'history'\nimport { RouterState, connectRouter } from 'connected-react-router'\nimport { centersReducer, CentersState } from '../store/center/reducer'\nimport { locationsReducer, LocationsState } from '../store/spots/reducer'\nimport { weatherForecastsReducer, WeatherForecastsState } from './weather/reducer'\nimport { mapReducer, MapState } from '../store/map/reducer'\n\nexport interface StoreState {\n    centers: CentersState\n    map: MapState\n\trouter: RouterState\n    spots: LocationsState\n    weatherForecasts: WeatherForecastsState\n}\n\nconst rootReducer = (history: History) => combineReducers({\n    centers: centersReducer,\n    map: mapReducer,\n\trouter: connectRouter(history),\n    spots: locationsReducer,\n    weatherForecasts: weatherForecastsReducer\n});\n\nexport default rootReducer","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './store';\n\nexport const history = createBrowserHistory()\n\nfunction configureStore(preloadedState?: any) {\n    const composeEnhancer: typeof compose = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    const store = createStore(\n        createRootReducer(history),\n        preloadedState,\n        composeEnhancer(\n            applyMiddleware(\n                routerMiddleware(history),\n                thunk\n            ),\n        ),\n    );\n\n    return store;\n}\n\nexport const store = configureStore();","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { theme } from './theme'\nimport Map from './containers/Map'\nimport Center from './containers/Center'\nimport Spot from './containers/Spot'\nimport Explore from './containers/Explore'\n\nimport { store, history } from './configureStore'\n\nconst App: React.FC = () => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Provider store={store}>\n                <ConnectedRouter history={history}>\n                    <CssBaseline />\n                    <Switch>\n                        <Route path=\"/dive-spot/:id\" render={() => <Spot />} />\n                        <Route path=\"/center/:id\" render={() => <Center />} />\n                        <Route path=\"/map\" render={() => <Map />} />\n                        <Route path=\"/explore\" render={() => <Explore />} />\n                        <Route path=\"/\" render={() => <Redirect to=\"/map\" />} />\n                    </Switch>\n                </ConnectedRouter>\n            </Provider>\n        </MuiThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/image1.3cbb4587.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image2.9d7ce690.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image3.24ee4e51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image4.a425af57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image5.88671b52.jpg\";"],"sourceRoot":""}