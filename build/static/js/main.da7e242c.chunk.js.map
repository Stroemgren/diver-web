{"version":3,"sources":["theme.tsx","http.ts","store/spots/actions.ts","store/spots/types.ts","store/spots/thunks.ts","store/spots/selectors.ts","mapStyle.ts","components/Map/GoogleMap.tsx","components/Map/Marker.tsx","store/map/selectors.ts","store/map/actions.ts","store/map/types.ts","store/router/selectors.ts","components/Navigation.tsx","components/Layout.tsx","store/center/selectors.ts","store/center/actions.ts","store/center/types.ts","store/center/thunks.ts","components/Map/Popup.tsx","components/Map/SpotPopup.tsx","containers/Map.tsx","store/weather/actions.ts","store/weather/types.ts","store/weather/selectors.ts","components/WeatherDay.tsx","components/Weather.tsx","store/weather/thunks.ts","components/Typography/Subtitle.tsx","components/Spot/Attributes.tsx","components/Typography/Body.tsx","components/Spot/Description.tsx","components/Spot/Photos.tsx","components/AvatarMap.tsx","components/SpotCard.tsx","components/Typography/Header.tsx","components/Typography/Place.tsx","components/Spot/HeaderSection.tsx","components/Spot.tsx","components/Layout/MaxWidth.tsx","containers/Spot.tsx","containers/Explore.tsx","store/center/reducer.ts","store/spots/reducer.ts","store/weather/reducer.ts","store/map/reducer.ts","store/index.ts","configureStore.ts","App.tsx","serviceWorker.ts","index.tsx","photos/image1.jpg","photos/image2.jpg","photos/image3.jpg","photos/image4.jpg","photos/image5.jpg"],"names":["theme","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","join","http","config","Http","axios","create","responseType","interceptors","request","use","error","Promise","reject","response","loadLocations","locations","type","fetchLocations","dispatch","getState","method","url","then","data","catch","selectedSpot","state","parts","router","location","pathname","split","filter","p","id","spots","byId","allLocations","Object","values","mapStyle","defaultProps","zoom","GoogleMap","props","center","children","bootstrapURLKeys","key","lat","latitude","lng","longitude","defaultZoom","options","styles","disableDefaultUI","Color","require","color","Marker","classes","useStyles","onClick","active","markerClass","clsx","container","clickable","className","makeStyles","position","transform","width","height","borderRadius","display","alignItems","justifyContent","backgroundColor","fade","rgb","string","cursor","getCenter","map","getZoom","setCenter","coordinate","setZoom","urlSegments","NavigationItem","icon","item","itemActive","Navigation","useDispatch","urlParts","useSelector","shallowEqual","Paper","elevation","push","flexDirection","zIndex","breakpoints","up","boxSizing","fontSize","borderBottom","borderLeft","marginLeft","Layout","activeIndex","style","flexGrow","allCenters","centers","loadCenters","fetchCenters","Popup","textAlign","padding","marginTop","SpotPopup","onViewClick","Typography","variant","locationType","gutterBottom","name","Button","size","Map","selectedLocation","mapCenter","mapZoom","useState","activeLocation","setActiveLocation","useEffect","l","c","maxHeight","backdrop","top","overflow","mapFix","contentContainer","overflowY","content","loadWeatherForecast","weatherForecast","weatherForCoordinate","weatherForecasts","byCoordinate","Segment","justify","left","right","align","segment","WeatherDay","root","title","attributeIcon","path","mdiWeatherWindy","attribute","wind","attributePostfix","iconMap","fill","minTemp","tempGraphContainer","tempGraphBaseline","tempMinLine","tempToWidth","tempMaxLine","maxTemp","margin","marginRight","fontWeight","borderBottomLeftRadius","borderTopLeftRadius","borderBottomRightRadius","borderTopRightRadius","mdiWeatherSunny","mdiWeatherPartlyCloudy","mdiWeatherCloudy","mdiWeatherRainy","mdiWeatherPouring","temp","Weather","this","fetchWeatherForecast","prevProps","marginBottom","React","Component","connect","ownProps","Subtitle","rest","Attribute","text","Attributes","mdiSkullOutline","entryType","mdiSpaOutline","mdiSwapVertical","minDepth","maxDepth","Body","Description","open","setOpen","textContainer","textContainerClosed","button","textTransform","Photos","GridList","cellHeight","cols","images","img","i","GridListTile","alt","src","AvatarMap","SpotCard","Header","component","Place","paragraph","HeaderSection","place","Spot","city","country","Grid","spacing","sm","description","image1","image2","image3","image4","image5","MaxWidth","maxWidth","scrollEl","useRef","scrollingEl","showSticky","setShowSticky","handleScroll","current","getBoundingClientRect","addEventListener","debounce","removeEventListener","ref","mapHeight","Explore","centersReducer","action","reduce","acc","cur","locationsReducer","weatherForecastsReducer","defaultState","mapReducer","rootReducer","history","combineReducers","connectRouter","createBrowserHistory","store","preloadedState","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","routerMiddleware","thunk","configureStore","App","CssBaseline","render","to","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.da7e242c.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#0C7ED9'\n        },\n        secondary: {\n            main: '#FF8C20'\n        }\n    },\n    typography: {\n        fontFamily: [\n            'Muli',\n            'sans-serif'\n        ].join(','),\n    }\n})","import axios, { AxiosRequestConfig, AxiosResponse, AxiosError, AxiosInstance, AxiosPromise } from 'axios'\nimport { Action } from 'redux'\nimport { ThunkAction } from 'redux-thunk'\nimport { StoreState } from './store'\n\nexport const http = (config: AxiosRequestConfig): AxiosPromise<AxiosInstance> => {\n\tconst Http = axios.create({\n\t\tresponseType: 'json',\n\t});\n\n\tHttp.interceptors.request.use((config: AxiosRequestConfig) => {\n\t\treturn config;\n\t}, (error: AxiosError) => {\n\t\treturn Promise.reject(error);\n\t});\n\n\tHttp.interceptors.response.use((response: AxiosResponse) => {\n\t\treturn response;\n\t}, (error: AxiosError) => {\n\t    return Promise.reject(error);\n\t});\n\n\treturn Http(config);\n}\n\nexport type Thunk = ThunkAction<void, StoreState, void, Action>;","import { Location } from 'diver-models'\nimport {\n\tLocationActions,\n\tLOAD_LOCATIONS\n} from './types';\n\nexport const loadLocations = (locations: Location[]): LocationActions => {\n    return { type: LOAD_LOCATIONS, locations }\n}\n","import { Location } from 'diver-models'\n\nexport const LOAD_LOCATIONS = 'LOAD_LOCATIONS'\n\nexport interface LoadLocations {\n\ttype: typeof LOAD_LOCATIONS\n\tlocations: Location[]\n}\n\nexport type LocationActions = LoadLocations","import { AxiosResponse, AxiosError } from 'axios'\nimport { StoreState } from '../../store'\nimport { http, Thunk } from '../../http'\n\nimport {\n\tloadLocations\n} from './actions';\n\nexport function fetchLocations(): Thunk {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\thttp({\n\t\t\tmethod: 'get',\n\t\t\turl: 'http://157.245.3.84:3000/location'\n\t\t})\n\t\t.then((response: AxiosResponse) => {\n\t\t\tdispatch(loadLocations(response.data));\n\t\t})\n\t\t.catch((error: AxiosError) => {\n\t\t\t// TODO\n\t\t});\n\t}\n}","import { StoreState } from '../'\n\nexport const selectedSpot = (state: StoreState) => {\n    const parts = state.router.location.pathname.split('/').filter(p => p !== '')\n    const id = parts[0] === 'dive-spot' ? parts[1] : null\n    return id && id in state.spots.byId ? state.spots.byId[id] : null\n}\n\nexport const allLocations = (state: StoreState) => {\n    return Object.values(state.spots.byId)\n}\n","export const mapStyle = [\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#e9e9e9\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 29\n            },\n            {\n                \"weight\": 0.2\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 18\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f5f5f5\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#dedede\"\n            },\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#ffffff\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": 36\n            },\n            {\n                \"color\": \"#333333\"\n            },\n            {\n                \"lightness\": 40\n            }\n        ]\n    },\n    {\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#f2f2f2\"\n            },\n            {\n                \"lightness\": 19\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#fefefe\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#fefefe\"\n            },\n            {\n                \"lightness\": 17\n            },\n            {\n                \"weight\": 1.2\n            }\n        ]\n    }\n]","import React, { ReactNode } from 'react'\nimport { Coordinate } from 'diver-models'\nimport GoogleMapReact from 'google-map-react'\nimport { mapStyle } from '../../mapStyle'\n\nconst defaultProps = {\n    zoom: 8\n}\n\ntype Props = {\n    center: Coordinate\n    children: ReactNode\n} & Partial<typeof defaultProps>\n\nconst GoogleMap = (props: Props) => {\n    const { center, children, zoom } = { ...defaultProps, ...props }\n\n    return (\n        <GoogleMapReact\n            bootstrapURLKeys={{ key: 'AIzaSyCbiVq77U94A6g0sEK59tcKlKj_1NFMZkE' }}\n            center={{lat: center.latitude, lng: center.longitude}}\n            defaultZoom={6}\n            zoom={zoom}\n            options={{\n                styles: mapStyle,\n                disableDefaultUI: true\n            }}\n        >\n            {children}\n        </GoogleMapReact>\n    )\n}\n\nexport default GoogleMap\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport clsx from 'clsx'\nconst Color = require('color')\n\nconst defaultProps = {\n    color: 'primary' as 'primary' | 'secondary'\n}\n\ntype Props = {\n    lat: number\n    lng: number\n    active?: boolean\n    onClick?: () => void\n} & Partial<typeof defaultProps>\n\nconst Marker = (props: Props) => {\n    const classes = useStyles(props)\n    const { color, onClick, active } = { ...defaultProps, ...props }\n\n    const handleClick = () => {\n        if (onClick) {\n            onClick()\n        }\n    }\n\n    const markerClass = clsx(\n        classes.container, \n        color === 'primary' ? classes.primary : classes.secondary,\n        onClick && classes.clickable,\n        active && classes.active\n    )\n\n    return (\n        <div onClick={handleClick} className={markerClass}>\n            <div></div>\n        </div>\n    )\n}\n\nexport default Marker\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        position: 'absolute',\n        transform: 'translate(-50%, -50%)',\n        width: '20px',\n        height: '20px',\n        borderRadius: '50%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& div': {\n            width: '8px',\n            height: '8px',\n            borderRadius: '50%'\n        }\n    },\n    active: {\n        width: '30px',\n        height: '30px',  \n    },\n    primary: {\n        backgroundColor: Color(theme.palette.primary.main).fade(0.65).rgb().string(),\n        '& div': {\n            backgroundColor: theme.palette.primary.main\n        }\n    },\n    secondary: {\n        backgroundColor: Color(theme.palette.secondary.main).fade(0.65).rgb().string(),\n        '& div': {\n            backgroundColor: theme.palette.secondary.main\n        }\n    },\n    clickable: {\n        cursor: 'pointer'\n    }\n}))\n","import { StoreState } from '../'\n\nexport const getCenter = (state: StoreState) => {\n    return state.map.center\n}\n\nexport const getZoom = (state: StoreState) => {\n    return state.map.zoom\n}\n ","import { Coordinate } from 'diver-models'\nimport {\n\tMapActions,\n\tSET_CENTER,\n\tSET_ZOOM\n} from './types';\n\nexport const setCenter = (coordinate: Coordinate): MapActions => {\n    return { type: SET_CENTER, coordinate }\n}\n\nexport const setZoom = (zoom: number): MapActions => {\n\treturn { type: SET_ZOOM, zoom }\n}\n","import { Coordinate } from \"diver-models\"\n\nexport const SET_CENTER = 'SET_CENTER'\nexport const SET_ZOOM = 'SET_ZOOM'\n\nexport interface SetCenter {\n\ttype: typeof SET_CENTER\n\tcoordinate: Coordinate\n}\n\nexport interface SetZoom {\n\ttype: typeof SET_ZOOM,\n\tzoom: number\n}\n\nexport type MapActions = SetCenter | SetZoom","import { StoreState } from '../'\n\nexport const urlSegments = (state: StoreState) => {\n    return state.router.location.pathname.split('/').filter(p => p !== '')\n}\n","import React, { ReactNode } from 'react'\nimport MapIcon from '@material-ui/icons/MapOutlined'\nimport ExploreIcon from '@material-ui/icons/ExploreOutlined'\nimport { makeStyles, Paper } from '@material-ui/core'\nimport clsx from 'clsx'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { urlSegments } from '../store/router/selectors'\nimport { shallowEqual } from 'recompose'\n\ntype ItemProps = {\n    icon: ReactNode\n    active: boolean\n    onClick: () => void\n}\n\nconst NavigationItem = (props: ItemProps) => {\n    const classes = useStyles()\n    const { icon, active, onClick } = props\n\n    return (\n        <div onClick={onClick} className={clsx(classes.item, active && classes.itemActive)}>\n            {icon}\n        </div>\n    )\n}\n\ntype Props = {\n    activeIndex: number\n}\n\nconst Navigation = (props: Props) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const urlParts = useSelector(urlSegments, shallowEqual)\n\n    return (\n        <Paper elevation={2} className={classes.container}>\n            <NavigationItem onClick={() => dispatch(push('/explore'))} active={urlParts[0] === 'explore' } icon={<ExploreIcon />}/>\n            <NavigationItem onClick={() => dispatch(push('/map'))} active={urlParts[0] === 'map' || urlParts[0] === 'dive-spot' } icon={<MapIcon />}/>\n        </Paper>\n    )\n}\n\nexport default Navigation\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        backgroundColor: '#fff',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        zIndex: 200,\n        borderRadius: 0,\n        [theme.breakpoints.up('sm')]: {\n            flexDirection: 'column'\n        }\n    },\n    item: {\n        cursor: 'pointer',\n        height: '56px',\n        width: '48px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        boxSizing: 'border-box',\n        [theme.breakpoints.up('sm')]: {\n            height: '56px',\n            width: '80px'\n        },\n        '& .MuiSvgIcon-root': {\n            fontSize: '1.875rem',\n            color: 'rgba(0, 0, 0, 0.35)',\n            [theme.breakpoints.up('sm')]: {\n                fontSize: '2.1875rem',\n                height: '80px',\n                width: '56px'\n            }\n        },\n        '&:hover': {\n            '& .MuiSvgIcon-root': {\n                color: 'rgba(0, 0, 0, 0.45)'\n            }\n        }\n    },\n    itemActive: {\n        borderBottom: `3px solid ${theme.palette.primary.main}`,\n        borderLeft: `none`,\n        [theme.breakpoints.up('sm')]: {\n            borderBottom: `none`,\n            borderLeft: `3px solid ${theme.palette.primary.main}`\n        },\n        '& .MuiSvgIcon-root': {\n            marginLeft: '-3px',\n            color: theme.palette.primary.main\n        },\n        '&:hover': {\n            '& .MuiSvgIcon-root': {\n                color: theme.palette.primary.main\n            }\n        }\n    }\n}))\n","import React, { ReactNode } from 'react'\nimport Navigation from './Navigation'\nimport { makeStyles } from '@material-ui/core'\n\ntype Props = {\n    children: ReactNode\n}\n\nconst Layout = (props: Props) => {\n    const { children } = props\n    const classes = useStyles()\n\n    return (\n        <div className={classes.container}>\n            <Navigation activeIndex={1} />\n            <div style={{ display: 'flex', flexGrow: 1, height: '100%' }}>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Layout\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        height: '100%',\n        width: '100%',\n        flexDirection: 'column-reverse',\n        [theme.breakpoints.up('sm')]: {\n            flexDirection: 'row',\n        }\n    }\n}))\n","import { StoreState } from '../'\n\nexport const allCenters = (state: StoreState) => {\n    return Object.values(state.centers.byId)\n}\n","import { Center } from 'diver-models'\nimport {\n\tCenterActions,\n\tLOAD_CENTERS\n} from './types';\n\nexport const loadCenters = (centers: Center[]): CenterActions => {\n    return { type: LOAD_CENTERS, centers }\n}\n","import { Center } from 'diver-models'\n\nexport const LOAD_CENTERS = 'LOAD_CENTERS'\n\nexport interface LoadCenters {\n\ttype: typeof LOAD_CENTERS\n\tcenters: Center[]\n}\n\nexport type CenterActions = LoadCenters","import { AxiosResponse, AxiosError } from 'axios'\nimport { StoreState } from '../../store'\nimport { http, Thunk } from '../../http'\n\nimport {\n\tloadCenters\n} from './actions';\n\nexport function fetchCenters(): Thunk {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\thttp({\n\t\t\tmethod: 'get',\n\t\t\turl: 'http://157.245.3.84:3000/center'\n\t\t})\n\t\t.then((response: AxiosResponse) => {\n\t\t\tdispatch(loadCenters(response.data));\n\t\t})\n\t\t.catch((error: AxiosError) => {\n\t\t\t// TODO\n\t\t});\n\t}\n}","import React, { ReactNode } from 'react'\nimport { makeStyles, Paper } from '@material-ui/core'\n\ntype Props = {\n    lat: number\n    lng: number\n    children: ReactNode\n}\n\nconst Popup = (props: Props) => {\n    const classes = useStyles()\n    const { children } = props\n\n    return (\n        <Paper elevation={3} className={classes.container}>\n            {children}\n        </Paper>\n    )\n}\n\nexport default Popup\n\nconst useStyles = makeStyles({\n    container: {\n        textAlign: 'center',\n        width: '250px',\n        height: '100px',\n        borderRadius: '5px',\n        padding: '8px',\n        transform: 'translate(-50%, -50%)',\n        marginTop: '-56px'\n    }\n})\n","import React from 'react'\nimport { Typography, Button } from '@material-ui/core'\nimport Popup from './Popup'\nimport { Location } from 'diver-models'\n\ntype Props = {\n    lat: number\n    lng: number\n    location: Location\n    onViewClick: () => void\n}\n\nconst SpotPopup = (props: Props) => {\n    const { lat, lng, location, onViewClick } = props\n\n    return (\n        <Popup lat={lat} lng={lng}>\n            <Typography variant=\"overline\" style={{ fontSize: '0.65rem' }}>{location.locationType} dive</Typography>\n            <Typography variant=\"h6\" gutterBottom style={{fontSize: '1rem', marginTop: '-8px'}}>{location.name}</Typography>\n            <Button \n                size=\"small\" \n                color=\"primary\"\n                onClick={onViewClick}\n            >\n                View\n            </Button>\n        </Popup>\n    )\n}\n\nexport default SpotPopup\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, shallowEqual, useSelector } from 'react-redux'\nimport { fetchLocations } from '../store/spots/thunks'\nimport { push } from 'connected-react-router'\nimport { selectedSpot, allLocations } from '../store/spots/selectors'\nimport { Location } from 'diver-models'\nimport GoogleMap from '../components/Map/GoogleMap'\nimport Marker from '../components/Map/Marker'\nimport { getCenter, getZoom } from '../store/map/selectors'\nimport { setCenter, setZoom } from '../store/map/actions'\nimport Layout from '../components/Layout'\nimport { allCenters } from '../store/center/selectors'\nimport { fetchCenters } from '../store/center/thunks'\nimport { makeStyles } from '@material-ui/core'\nimport SpotPopup from '../components/Map/SpotPopup'\n\ntype Props = {\n\n}\n\nconst Map = (props: Props) => {\n    const classes = useStyles(props)\n    const dispatch = useDispatch()\n    const locations = useSelector(allLocations, shallowEqual)\n    const centers = useSelector(allCenters, shallowEqual)\n    const selectedLocation = useSelector(selectedSpot, shallowEqual)\n    const mapCenter = useSelector(getCenter, shallowEqual)\n    const mapZoom = useSelector(getZoom, shallowEqual)\n    const [ activeLocation, setActiveLocation ] = useState(null as Location | null)\n\n    useEffect(() => {\n        dispatch(fetchLocations())\n        dispatch(fetchCenters())\n    }, [dispatch])\n\n    useEffect(() => {\n        if (selectedLocation) {\n            dispatch(setCenter(selectedLocation.coordinate))\n            dispatch(setZoom(10))\n        }\n    }, [selectedLocation, dispatch])\n\n    const handleSpotClick = (location: Location) => {\n        // dispatch(push(`/dive-spot/${location.id}`))\n        dispatch(setCenter(location.coordinate))\n        dispatch(setZoom(10))\n        setActiveLocation(location)\n    }\n\n    return (\n        <Layout>\n            <GoogleMap\n                center={mapCenter}\n                zoom={mapZoom}\n            >\n                {locations.map(l => (\n                    <Marker active={selectedLocation !== null && l.id === selectedLocation.id} key={l.id} lat={l.coordinate.latitude} lng={l.coordinate.longitude} onClick={() => handleSpotClick(l)} />\n                ))}\n                {centers.map(c => (\n                    <Marker key={c.id} lat={c.coordinate.latitude} lng={c.coordinate.longitude} color=\"secondary\" />\n                ))}\n                {activeLocation &&\n                    <SpotPopup \n                        location={activeLocation} \n                        lat={activeLocation.coordinate.latitude} \n                        lng={activeLocation.coordinate.longitude}\n                        onViewClick={() => dispatch(push(`/dive-spot/${activeLocation.id}`))}\n                    />\n                }\n            </GoogleMap>\n        </Layout>\n    )\n}\n\nexport default Map\n\nconst mapHeight = '325px'\n\nconst useStyles = makeStyles({\n    container: {\n        position: 'relative',\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n    },\n    backdrop: {\n        width: '100%',\n        height: mapHeight,\n        top: 0,\n        overflow: 'hidden'\n    },\n    mapFix: {\n        height: '375px',\n        marginTop: '-25px'\n    },\n    contentContainer: {\n        position: 'absolute',\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n        zIndex: 75,\n        overflowY: 'scroll',\n        top: 0\n    },\n    content: {\n        backgroundColor: '#fff',\n        width: '100%',\n        marginTop: mapHeight,\n    }\n})\n","import { IWeatherForecast } from '../../models/IWeatherForecast';\nimport {\n\tWeatherForecastActions,\n\tLOAD_WEATHER_FORECAST\n} from './types';\n\nexport const loadWeatherForecast = (weatherForecast: IWeatherForecast): WeatherForecastActions => {\n    return { type: LOAD_WEATHER_FORECAST, weatherForecast }\n}\n","import { IWeatherForecast } from '../../models/IWeatherForecast';\n\nexport const LOAD_WEATHER_FORECAST = 'LOAD_WEATHER_FORECAST';\n\nexport interface LoadWeatherForecast {\n\ttype: typeof LOAD_WEATHER_FORECAST;\n\tweatherForecast: IWeatherForecast;\n}\n\nexport type WeatherForecastActions = LoadWeatherForecast","import { StoreState } from '../'\nimport { Coordinate } from 'diver-models'\nimport { IWeatherForecast } from '../../models/IWeatherForecast'\n\nexport const weatherForCoordinate = (state: StoreState, coordinate: Coordinate): IWeatherForecast | null => {\n    const key = `${coordinate.latitude}${coordinate.longitude}`\n    return key in state.weatherForecasts.byCoordinate ? state.weatherForecasts.byCoordinate[key] : null\n}\n","import React, { ReactNode } from 'react'\nimport Icon from '@mdi/react'\nimport { mdiWeatherWindy } from '@mdi/js'\nimport { makeStyles } from '@material-ui/core'\nimport { mdiWeatherSunny, mdiWeatherPartlyCloudy, mdiWeatherCloudy, mdiWeatherRainy, mdiWeatherPouring } from '@mdi/js'\n\ntype Props = {\n    title: string\n    wind: number\n    icon: string\n    minTemp: number\n    maxTemp: number\n}\n\nconst Segment = (props: { width: number, children: ReactNode, align: 'left' | 'center' | 'right' }) => {\n    const classes = useStyles()\n    const justify = { left: 'flex-start', center: 'space-around', right: 'flex-end' }[props.align]\n\n    return (\n        <div style={{ width: `${props.width}%`, justifyContent: justify }} className={classes.segment}>{props.children}</div>\n    )\n}\n\nconst WeatherDay = (props: Props) => {\n    const classes = useStyles(props)\n\n    return (\n        <div className={classes.root}>\n            <Segment width={13} align=\"left\">\n                <p className={classes.title}>{props.title}</p>\n            </Segment>\n            <Segment width={18} align=\"center\">\n                <Icon\n                    className={classes.attributeIcon}\n                    path={mdiWeatherWindy}\n                    title=\"Wind\"\n                    size={0.6}\n                />\n                <p className={classes.attribute}>{props.wind}<span className={classes.attributePostfix}>m/s</span></p>\n            </Segment>\n            <Segment width={20} align=\"center\">\n                <Icon \n                    path={iconMap[props.icon].icon}\n                    style={{ fill: iconMap[props.icon].color }}\n                    size={0.7}\n                />\n            </Segment>\n            <Segment width={9} align=\"left\">\n                <p className={classes.attribute}>{props.minTemp}°C</p>\n            </Segment>\n            <Segment width={31} align=\"center\">\n                <div className={classes.tempGraphContainer}>\n                    <div className={classes.tempGraphBaseline} />\n                    <div className={classes.tempMinLine} style={{ width: tempToWidth(props.minTemp) }} />\n                    <div className={classes.tempMaxLine} style={{ width: tempToWidth(props.maxTemp) }} />\n                </div>\n            </Segment>\n            <Segment width={9} align=\"right\">\n                <p className={classes.attribute} style={{ color: '#222' }}>{props.maxTemp}°C</p>\n            </Segment>\n        </div>\n    )\n}\n\nexport default WeatherDay\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    segment: {\n        display: 'flex', \n        flexDirection: 'row', \n        alignItems: 'center'\n    },\n    title: {\n        fontSize: '0.875rem',\n        margin: 0\n    },\n    attributeIcon: {\n        marginRight: '4px',\n        fill: theme.palette.primary.main\n    },\n    attribute: {\n        color: '#666',\n        fontSize: '0.775rem',\n        margin: '8px 0'\n    },\n    attributePostfix: {\n        fontSize: '0.675rem',\n        fontWeight: 700\n    },\n    tempGraphContainer: {\n        position: 'relative',\n        width: '100%',\n        height: '15px',\n        margin: '0 8px'\n    },\n    tempGraphBaseline: {\n        position: 'absolute',\n        top: '7px',\n        width: '100%',\n        borderBottom: '1px dashed #ccc'\n    },\n    tempMinLine: {\n        backgroundColor: '#ccc',\n        height: '5px',\n        borderBottomLeftRadius: '2px',\n        borderTopLeftRadius: '2px',\n        position: 'absolute',\n        right: '50%',\n        top: '5px'\n    },\n    tempMaxLine: {\n        backgroundColor: '#FF8C20',\n        height: '5px',\n        borderBottomRightRadius: '2px',\n        borderTopRightRadius: '2px',\n        position: 'absolute',\n        left: '50%',\n        top: '5px'\n    }\n}))\n\nconst iconMap: { [key: string]: { icon: string, color: string } } = {\n    'clearSky': { icon: mdiWeatherSunny, color: '#FF8C20' },\n    'fewClouds': { icon: mdiWeatherPartlyCloudy, color: '#0791EC' },\n    'scatteredClouds': { icon: mdiWeatherCloudy, color: '#0791EC' },\n    'brokenClouds': { icon: mdiWeatherCloudy, color: '#0791EC' },\n    'rain': { icon: mdiWeatherRainy, color: '#030155' },\n    'showerRain': { icon: mdiWeatherPouring, color: '#030155' }\n}\n\nconst tempToWidth = (temp: number) => {\n    const drawnTemp = temp <= 40 ? temp : 40\n    return (2.5 * drawnTemp) / 2\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { StoreState } from '../store'\nimport { fetchWeatherForecast } from '../store/weather/thunks'\nimport { IWeatherForecast } from '../models/IWeatherForecast'\nimport { Coordinate } from 'diver-models'\nimport { weatherForCoordinate } from '../store/weather/selectors'\nimport WeatherDay from './WeatherDay'\n\ntype Props = {\n    coordinate: Coordinate\n    weatherForecast: IWeatherForecast | null\n    fetchWeatherForecast: typeof fetchWeatherForecast\n}\n\nconst mapStateToProps = (state: StoreState, ownProps: Pick<Props, 'coordinate'>) => ({\n    weatherForecast: weatherForCoordinate(state, ownProps.coordinate)\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    fetchWeatherForecast: (coordinate: Coordinate) => dispatch(fetchWeatherForecast(coordinate))\n})\n\nclass Weather extends React.Component<Props, {}> {\n    componentDidMount() {\n        this.props.fetchWeatherForecast(this.props.coordinate)\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        if (prevProps.coordinate !== this.props.coordinate) {\n            this.props.fetchWeatherForecast(this.props.coordinate)\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <div style={{ display: 'flex', flexDirection: 'column', marginBottom: '24px' }}>\n                    <WeatherDay title=\"Sun\" icon=\"clearSky\" wind={3.6} minTemp={14} maxTemp={23} />\n                    <WeatherDay title=\"Mon\" icon=\"showerRain\" wind={3.2} minTemp={13} maxTemp={23} />\n                    <WeatherDay title=\"Tue\" icon=\"fewClouds\" wind={3.4} minTemp={10} maxTemp={18} />\n                    <WeatherDay title=\"Wed\" icon=\"scatteredClouds\" wind={2.1} minTemp={10} maxTemp={19} />\n                    <WeatherDay title=\"Thu\" icon=\"scatteredClouds\" wind={1.8} minTemp={17} maxTemp={26} />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather)\n","import { AxiosResponse, AxiosError } from 'axios'\nimport { StoreState } from '../../store'\nimport { http, Thunk } from '../../http'\nimport { Coordinate } from 'diver-models'\n\nimport {\n\tloadWeatherForecast\n} from './actions';\n\nexport function fetchWeatherForecast(coordinate: Coordinate): Thunk {\n\treturn (dispatch: any, getState: () => StoreState) => {\n\t\thttp({\n\t\t\tmethod: 'get',\n\t\t\turl: `http://0.0.0.0:3000/weather?latitude=${coordinate.latitude}&longitude=${coordinate.longitude}`\n\t\t})\n\t\t.then((response: AxiosResponse) => {\n\t\t\tdispatch(loadWeatherForecast(response.data));\n\t\t})\n\t\t.catch((error: AxiosError) => {\n\t\t\t// TODO\n\t\t});\n\t}\n}","import React, { ReactNode } from 'react'\nimport { Typography } from '@material-ui/core'\nimport { TypographyProps } from '@material-ui/core/Typography'\n\ntype Props = {\n    children: ReactNode\n} & TypographyProps\n\nconst Subtitle = (props: Props) => {\n    const { children, ...rest } = props\n\n    return (\n        <Typography variant=\"h6\" {...rest}>{props.children}</Typography>\n    )\n}\n\nexport default Subtitle\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Icon from '@mdi/react'\nimport { mdiSkullOutline, mdiSpaOutline, mdiSwapVertical } from '@mdi/js'\nimport { Typography, Paper } from '@material-ui/core'\nimport { Location } from 'diver-models'\n\ntype Props = {\n    location: Location\n}\n\nconst Attribute = (props: { text: string, icon: string }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.item}>\n            <Icon\n                className={classes.icon}\n                path={props.icon}\n                title=\"User Profile\"\n                size={1}\n            />\n            <Typography className={classes.text} variant=\"body2\">{props.text}</Typography>\n        </div>\n    )\n}\n\nconst Attributes = (props: Props) => {\n    const classes = useStyles(props)\n    const { location } = props\n\n    return (\n        <Paper elevation={1} className={classes.container}>\n            <Attribute icon={mdiSkullOutline} text={location.entryType + ' Entry'} />\n            <Attribute icon={mdiSpaOutline} text={location.locationType} />\n            <Attribute icon={mdiSwapVertical} text={`${location.minDepth}-${location.maxDepth}m`} />\n        </Paper>\n    )\n}\n\nexport default Attributes\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginBottom: '24px',\n        padding: '8px 0'\n    },\n    item: {\n        display: 'flex',\n        flexGrow: 1,\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    icon: {\n        marginBottom: '4px',\n        fill: '#555'\n    },\n    text: {\n        fontSize: '0.725rem',\n        color: '#555'\n    }\n})\n","import React, { ReactNode } from 'react'\nimport { Typography, makeStyles } from '@material-ui/core'\nimport { TypographyProps } from '@material-ui/system'\n\ntype Props = {\n    children: ReactNode\n} & TypographyProps\n\nconst Body = (props: Props) => {\n    const classes = useStyles()\n    const { children, ...rest } = props\n\n    return (\n        <Typography variant=\"body2\" className={classes.text} { ...rest }>{children}</Typography>\n    )\n}\n\nexport default Body\n\nconst useStyles = makeStyles({\n    text: {\n        fontSize: '0.825rem'\n    }\n})\n","import React, { ReactNode, useState } from 'react'\nimport clsx from 'clsx'\nimport Body from '../Typography/Body'\nimport { Button, makeStyles } from '@material-ui/core'\n\ntype Props = {\n    children: ReactNode\n}\n\nconst Description = (props: Props) => {\n    const classes = useStyles()\n    const { children } = props\n    const [ open, setOpen ] = useState(false)\n\n    const handleClick = () => {\n        setOpen(!open)\n    }\n\n    return (\n        <>\n            {children !== '' &&\n                <div className={classes.container}>\n                    <div className={clsx(classes.textContainer, !open && classes.textContainerClosed )}>\n                        <Body>{children}</Body>\n                    </div>\n                    <Button onClick={handleClick} size=\"small\" color=\"primary\" className={classes.button}>{open ? 'View less' : 'View more'}</Button>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Description\n\nconst useStyles = makeStyles({\n    container: {\n        marginBottom: '24px'\n    },\n    textContainer: {\n        marginBottom: '8px',\n        position: 'relative',\n        height: 'auto',\n        overflow: 'hidden'\n    },\n    textContainerClosed: {\n        height: '52px',\n        overflow: 'hidden',\n    },\n    button: {\n        margin: '0 auto',\n        display: 'block',\n        textTransform: 'none'\n    }\n})\n","import React from 'react'\nimport { GridList, GridListTile } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core'\n\ntype Props = {\n    images: string[]\n}\n\nconst Photos = (props: Props) => {\n    const classes = useStyles(props)\n\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={100} cols={3}>\n                {props.images.map((img, i) => \n                    <GridListTile key={i} cols={(i + 1) % 4 === 0 ? 2 : 1}>\n                        <img alt=\"\" src={img} />\n                    </GridListTile>\n                )}\n            </GridList>\n        </div>\n    )\n}\n\nexport default Photos\n\nconst useStyles = makeStyles({\n    root: {\n        marginBottom: '24px'\n    }\n})\n","import React from 'react'\nimport { Coordinate } from 'diver-models'\nimport Marker from './Map/Marker'\nimport { makeStyles } from '@material-ui/core'\nimport GoogleMap from './Map/GoogleMap'\n\ntype Props = {\n    coordinate: Coordinate\n}\n\nconst AvatarMap = (props: Props) => {\n    const classes = useStyles()\n    const { coordinate } = props\n\n    return (\n        <div className={classes.container}>\n            <div style={{ width: '120px', height: '120px', marginTop: '-20px', marginLeft: '-20px' }}> \n                <GoogleMap\n                    center={coordinate}\n                >\n                    <Marker lat={coordinate.latitude} lng={coordinate.longitude} />\n                </GoogleMap>\n            </div>\n        </div>\n    )\n}\n\nexport default AvatarMap\n\nconst useStyles = makeStyles({\n    container: {\n        width: '80px',\n        height: '80px',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    }\n})\n","import React from 'react'\nimport { Paper, makeStyles } from '@material-ui/core'\nimport AvatarMap from './AvatarMap'\n\ntype Props = {\n\n}\n\nconst SpotCard = (props: Props) => {\n    const classes = useStyles()\n\n    return (\n        <Paper className={classes.container}>\n            <AvatarMap coordinate={{ latitude: 56, longitude: 12 }} />\n        </Paper>\n    )\n}\n\nexport default SpotCard\n\nconst useStyles = makeStyles({\n    container: {\n        height: '120px'\n    }\n})\n","import React, { ReactNode } from 'react'\nimport { Typography } from '@material-ui/core'\nimport { TypographyProps } from '@material-ui/core/Typography'\n\ntype Props = {\n    children: ReactNode\n} & TypographyProps\n\nconst Header = (props: Props) => {\n    const { children, ...rest } = props\n\n    return (\n        <Typography variant=\"h4\" component=\"h1\" { ...rest }>{children}</Typography>\n    )\n}\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport { Typography, makeStyles } from '@material-ui/core'\nimport { TypographyProps } from '@material-ui/core/Typography'\nimport PlaceIcon from '@material-ui/icons/Place'\n\ntype Props = {\n    children: ReactNode\n} & TypographyProps\n\nconst Place = (props: Props) => {\n    const classes = useStyles()\n    const { children, paragraph, ...rest } = props\n\n    return (\n        <div className={classes.container} style={{ marginBottom: paragraph ? '16px' : 0 }}>\n            <PlaceIcon className={classes.icon} />\n            <Typography variant=\"body1\" className={classes.text} { ...rest }>{children}</Typography>\n        </div>\n    )\n}\n\nexport default Place\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    icon: {\n        fontSize: '1.125rem',\n        marginRight: '2px',\n        marginLeft: '-2px',\n        color: theme.palette.primary.main\n    },\n    text: {\n        fontSize: '0.825rem',\n        color: theme.palette.primary.main\n    }\n}))\n","import React from 'react'\nimport Header from '../Typography/Header'\nimport Place from '../Typography/Place'\n\ntype Props = {\n    title: string\n    place: string\n}\n\nconst HeaderSection = (props: Props) => {\n    const { title, place } = props\n\n    return (\n        <div style={{padding: '16px 0'}}>\n            <Header>{title}</Header>\n            <Place>{place}</Place>\n        </div>\n    )\n}\n\nexport default HeaderSection\n","import React from 'react'\nimport Weather from './Weather'\nimport Subtitle from './Typography/Subtitle'\nimport Attributes from './Spot/Attributes'\nimport Description from './Spot/Description'\nimport Photos from './Spot/Photos'\nimport image1 from '../photos/image1.jpg'\nimport image2 from '../photos/image2.jpg'\nimport image3 from '../photos/image3.jpg'\nimport image4 from '../photos/image4.jpg'\nimport image5 from '../photos/image5.jpg'\nimport { Location } from 'diver-models'\nimport SpotCard from './SpotCard'\nimport { Grid } from '@material-ui/core'\nimport HeaderSection from './Spot/HeaderSection'\n\ntype Props = {\n    location: Location\n}\n\nconst Spot = (props: Props) => {\n    const { location } = props\n    const place = !location.city ? location.country.name : `${location.city.name}, ${location.country.name}`\n    \n    return (\n        <div>\n            <div style={{ marginBottom: '24px' }}>\n                <HeaderSection \n                    title={location.name}\n                    place={place}\n                />\n            </div>\n            <Grid container spacing={4}>\n                <Grid item sm={6} style={{width: '100%'}}>\n                    <Subtitle paragraph>Description</Subtitle>\n                    <Attributes location={location} />\n                    <Description>{ props.location.description }</Description>\n                </Grid>\n                <Grid item sm={6} style={{width: '100%'}}>\n                    <Subtitle paragraph>Weather Forecast</Subtitle>\n                    <Weather coordinate={props.location.coordinate} />\n                </Grid>\n            </Grid>\n\n            \n            <Subtitle paragraph>Photos</Subtitle>\n            <Photos images={[image1, image2, image3, image4, image5]} />\n            \n            <Subtitle paragraph>Nearby Locations</Subtitle>\n            <SpotCard />\n\n            <Subtitle paragraph>Nearby Centers</Subtitle>\n            <SpotCard />\n        </div>\n    )\n}\n\nexport default Spot","import React, { ReactNode } from 'react'\n\ntype Props = {\n    children: ReactNode\n}\n\nconst MaxWidth = (props: Props) => (\n    <div style={{ maxWidth: '1024px', margin: '0 auto' }}>{ props.children }</div>\n)\n\nexport default MaxWidth\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch, shallowEqual, useSelector } from 'react-redux'\nimport { fetchLocations } from '../store/spots/thunks'\nimport { push } from 'connected-react-router'\nimport * as SpotComp from '../components/Spot'\nimport { selectedSpot, allLocations } from '../store/spots/selectors'\nimport { Location } from 'diver-models'\nimport GoogleMap from '../components/Map/GoogleMap'\nimport Marker from '../components/Map/Marker'\nimport { getCenter, getZoom } from '../store/map/selectors'\nimport { setCenter, setZoom } from '../store/map/actions'\nimport Layout from '../components/Layout'\nimport { allCenters } from '../store/center/selectors'\nimport { fetchCenters } from '../store/center/thunks'\nimport { makeStyles, Paper } from '@material-ui/core'\nimport debounce from 'lodash/debounce'\nimport MaxWidth from '../components/Layout/MaxWidth'\nimport HeaderSection from '../components/Spot/HeaderSection'\n\nconst Spot = () => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const locations = useSelector(allLocations, shallowEqual)\n    const centers = useSelector(allCenters, shallowEqual)\n    const selectedLocation = useSelector(selectedSpot, shallowEqual)\n    const mapCenter = useSelector(getCenter, shallowEqual)\n    const mapZoom = useSelector(getZoom, shallowEqual)\n    const scrollEl = useRef(null as any)\n    const scrollingEl = useRef(null as any)\n    const [ showSticky, setShowSticky ] = useState(false)\n\n    useEffect(\n        () => {\n            const handleScroll = () => {\n                const position = scrollingEl.current.getBoundingClientRect()\n                setShowSticky(position.top < 1)\n            }\n            scrollEl.current.addEventListener(\"scroll\", debounce(handleScroll))\n            return () => scrollEl.current.removeEventListener(\"scroll\", debounce(handleScroll))\n        },\n        [debounce] \n      );\n\n    useEffect(() => {\n        dispatch(fetchLocations())\n        dispatch(fetchCenters())\n    }, [dispatch])\n\n    useEffect(() => {\n        if (selectedLocation) {\n            dispatch(setCenter(selectedLocation.coordinate))\n            dispatch(setZoom(10))\n        }\n    }, [selectedLocation, dispatch])\n\n    const handleSpotClick = (location: Location) => {\n        dispatch(push(`/dive-spot/${location.id}`))\n        dispatch(setCenter(location.coordinate))\n        dispatch(setZoom(10))\n    }\n\n    return (\n        <Layout>\n            <div className={classes.container}>\n                <Paper style={{position: 'absolute', top: 0, left: 0, right: 0, zIndex: 100, display: showSticky ? 'block' : 'none', borderRadius: '0', padding: '0 32px'}}>\n                    <MaxWidth>\n                        <HeaderSection\n                            title={selectedLocation ? selectedLocation.name : ''}\n                            place={selectedLocation ? selectedLocation.country.name : ''}\n                        />\n                    </MaxWidth>\n                </Paper>\n                <div className={classes.backdrop}>\n                    <div className={classes.mapFix}>\n                    <GoogleMap\n                        center={mapCenter}\n                        zoom={mapZoom}\n                    >\n                        {locations.map(l => (\n                            <Marker active={selectedLocation !== null && l.id === selectedLocation.id} key={l.id} lat={l.coordinate.latitude} lng={l.coordinate.longitude} onClick={() => handleSpotClick(l)} />\n                        ))}\n                        {centers.map(c => (\n                            <Marker key={c.id} lat={c.coordinate.latitude} lng={c.coordinate.longitude} color=\"secondary\" />\n                        ))}\n                    </GoogleMap>\n                    </div>\n                </div>\n                <div className={classes.contentContainer} ref={scrollEl}>               \n                    <div className={classes.content} ref={scrollingEl}>\n                        <MaxWidth>\n                            {selectedLocation &&\n                                <SpotComp.default\n                                    location={selectedLocation}\n                                />\n                            }\n                        </MaxWidth>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport default Spot\n\nconst mapHeight = 250\n\nconst useStyles = makeStyles({\n    container: {\n        position: 'relative',\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n    },\n    backdrop: {\n        width: '100%',\n        height: `${mapHeight}px`,\n        top: 0,\n        overflow: 'hidden'\n    },\n    mapFix: {\n        height: `${mapHeight + 50}px`,\n        marginTop: '-25px'\n    },\n    contentContainer: {\n        position: 'absolute',\n        height: '100%',\n        maxHeight: '100%',\n        width: '100%',\n        zIndex: 75,\n        overflowY: 'scroll',\n        top: 0,\n    },\n    content: {\n        backgroundColor: '#fff',\n        width: '100%',\n        marginTop: `${mapHeight}px`,\n        padding: '0 32px 24px 32px'\n    }\n})\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport Layout from '../components/Layout'\n\nconst Explore = () => {\n    return (\n        <Layout>\n            <Typography variant=\"h4\">Stay tuned!</Typography>\n        </Layout>\n    )\n}\n\nexport default Explore\n","import { Reducer, AnyAction } from 'redux';\nimport {\n\tLOAD_CENTERS\n} from './types'\nimport { Center } from 'diver-models';\n\nexport type CentersState = {\n    byId: { [key: string]: Center }\n}\n\nexport const centersReducer: Reducer<CentersState> = (state: CentersState = { byId: {} }, action: AnyAction): CentersState => {\n\tswitch (action.type) {\n        case LOAD_CENTERS:\n\t\t\treturn { \n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.centers.reduce((acc: { [key: string]: Center }, cur: Center) => ({ ...acc, [cur.id]: cur }), {})\n                }\n            }\n\t}\n\n\treturn state;\n}\n","import { Reducer, AnyAction } from 'redux';\nimport {\n\tLOAD_LOCATIONS\n} from './types'\nimport { Location } from 'diver-models';\n\nexport type LocationsState = {\n    byId: { [key: string]: Location }\n}\n\nexport const locationsReducer: Reducer<LocationsState> = (state: LocationsState = { byId: {} }, action: AnyAction): LocationsState => {\n\tswitch (action.type) {\n\t\tcase LOAD_LOCATIONS: \n\t\t\treturn { \n                ...state,\n                byId: {\n                    ...state.byId,\n                    ...action.locations.reduce((acc: { [key: string]: Location }, cur: Location) => ({ ...acc, [cur.id]: cur }), {})\n                }\n            }\n\t}\n\n\treturn state;\n}\n","import { Reducer, AnyAction } from 'redux';\nimport { IWeatherForecast } from '../../models/IWeatherForecast';\nimport {\n\tLOAD_WEATHER_FORECAST\n} from './types'\n\nexport type WeatherForecastsState = {\n    byCoordinate: { [key: string]: IWeatherForecast }\n}\n\nexport const weatherForecastsReducer: Reducer<WeatherForecastsState> = (state: WeatherForecastsState = { byCoordinate: {} }, action: AnyAction): WeatherForecastsState => {\n\tswitch (action.type) {\n        case LOAD_WEATHER_FORECAST: \n            const key = `${action.weatherForecast.coordinate.latitude}${action.weatherForecast.coordinate.longitude}`\n\t\t\treturn { \n                ...state,\n                byCoordinate: {\n                    ...state.byCoordinate,\n                    [key]: action.weatherForecast\n                }\n            }\n\t}\n\n\treturn state;\n}\n","import { Reducer, AnyAction } from 'redux'\nimport { Coordinate } from 'diver-models'\nimport {\n\tSET_CENTER, SET_ZOOM\n} from './types'\n\nconst defaultState = {\n\tcenter: { latitude: 56, longitude: 12 } as Coordinate,\n\tzoom: 8\n}\n\nexport type MapState = typeof defaultState\n\nexport const mapReducer: Reducer<MapState> = (state: MapState = defaultState, action: AnyAction): MapState => {\n\tswitch (action.type) {\n\t\tcase SET_CENTER: \n\t\t\treturn { \n                ...state,\n                center: action.coordinate\n\t\t\t}\n\t\tcase SET_ZOOM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tzoom: action.zoom\n\t\t\t}\n\t}\n\n\treturn state;\n}\n","import { combineReducers } from 'redux'\nimport { History } from 'history'\nimport { RouterState, connectRouter } from 'connected-react-router'\nimport { centersReducer, CentersState } from '../store/center/reducer'\nimport { locationsReducer, LocationsState } from '../store/spots/reducer'\nimport { weatherForecastsReducer, WeatherForecastsState } from './weather/reducer'\nimport { mapReducer, MapState } from '../store/map/reducer'\n\nexport interface StoreState {\n    centers: CentersState\n    map: MapState\n\trouter: RouterState\n    spots: LocationsState\n    weatherForecasts: WeatherForecastsState\n}\n\nconst rootReducer = (history: History) => combineReducers({\n    centers: centersReducer,\n    map: mapReducer,\n\trouter: connectRouter(history),\n    spots: locationsReducer,\n    weatherForecasts: weatherForecastsReducer\n});\n\nexport default rootReducer","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport createRootReducer from './store';\n\nexport const history = createBrowserHistory()\n\nfunction configureStore(preloadedState?: any) {\n    const composeEnhancer: typeof compose = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    const store = createStore(\n        createRootReducer(history),\n        preloadedState,\n        composeEnhancer(\n            applyMiddleware(\n                routerMiddleware(history),\n                thunk\n            ),\n        ),\n    );\n\n    return store;\n}\n\nexport const store = configureStore();","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { theme } from './theme'\nimport Map from './containers/Map'\nimport Spot from './containers/Spot'\nimport Explore from './containers/Explore'\n\nimport { store, history } from './configureStore'\n\nconst App: React.FC = () => {\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Provider store={store}>\n                <ConnectedRouter history={history}>\n                    <CssBaseline />\n                    <Switch>\n                        <Route path=\"/dive-spot/:id\" render={() => <Spot />} />\n                        <Route path=\"/map\" render={() => <Map />} />\n                        <Route path=\"/explore\" render={() => <Explore />} />\n                        <Route path=\"/\" render={() => <Redirect to=\"/map\" />} />\n                    </Switch>\n                </ConnectedRouter>\n            </Provider>\n        </MuiThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/image1.3cbb4587.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image2.9d7ce690.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image3.24ee4e51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image4.a425af57.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image5.88671b52.jpg\";"],"sourceRoot":""}